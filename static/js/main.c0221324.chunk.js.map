{"version":3,"sources":["core/Keyboard.ts","utils/course-utils.ts","utils/text-utils.ts","core/CharacterSet.ts","core/TrainingStringGenerator/CharacterInserter.ts","core/TrainingStringGenerator/MarkovChain.ts","core/TrainingStringGenerator/WordModifiers.ts","core/TrainingStringGenerator/TrainingStringGenerator.ts","components/Contexts/ThemeContext/ThemeContext.tsx","core/TrainingText.ts","assets/courses/Courses.ts","assets/languages/english/English.ts","core/Language.ts","assets/keyboard_layouts/en_qwerty.ts","components/defaultState.ts","assets/texts/state_and_revolution.js","components/FormattedText/FormattedText.tsx","components/VirtualKeyboard/VirtualKeyboard.tsx","components/Modals/ModeSelectorModal/ModeSelectorModal.tsx","utils/utils.ts","components/Modals/SettingsModal/SettingsModal.tsx","components/TextDisplay/TextDisplay.tsx","components/Toolbar/FontSizeToggle.tsx","components/Toolbar/QuickStats.tsx","components/Toolbar/Toolbar.tsx","components/TypeTrainer.tsx","utils/Timer.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Hand","Finger","Keyboard","_labelMap","_layout","_keyCodeLayout","_fingerMap","NONE","hand","ANY","finger","Backquote","LEFT","PINKY","Digit1","Digit2","RING","Digit3","MIDDLE","Digit4","INDEX","Digit5","Digit6","Digit7","RIGHT","Digit8","Digit9","Digit0","Minus","Equal","Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Backslash","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ShiftRight","ControlLeft","AltLeft","Space","THUMB","AltRight","ControlRight","this","parseLayout","keyboard","entries","idx","rowCodes","col","code","label","fingerHand","keyCode","slice","charsAtCourseLevel","charSet","level","filteredCodes","codesAtCourseLevel","characters","filter","every","c","includes","specifiesRows","keyBoardRows","specifiesHand","specifiesFingers","fingers","length","uniqueKeyCodes","keyCodes","push","reduce","codes","row","concat","keyCodeLayout","fingerMap","basicSanitize","str","sanitized","replace","sanitizeCode","String","raw","match","p1","offset","string","CharacterSet","_characters","_letterSet","_numberSet","_punctSet","_specialSet","ofType","t","type","arr","character","glyph","toLowerCase","find","cs","uniqueGlyphs","bracketPair","PrependCharacterInserter","behavior","AppendCharacterInserter","PrependOrAppendCharacterInserter","Math","random","BracketCharacterInserter","SplitCharacterInserter","vowels","isVowel","char","splitIndices","i","splitIndex","floor","OperatorCharacterInserter","CharacterInserter","inserter","apply","MarkovChain","order","words","duplicates","start","children","neighbors","init","map","word","addToDuplicatesTrie","previous","key","ch","substr","newNode","currentNode","childNode","repeat","min","max","allowDuplicates","maxAttempts","attempts","nextNodeIndex","isDuplicate","Error","randomEle","NumsWordModifier","numberSet","PunctWordModifier","punctSet","SpecialWordModifier","specialSet","GuidedModeStringGenerator","_keyboard","_language","_courseLevels","newWordModifier","guidedHasCaps","guidedHasNumbers","guidedHasPunctuation","guidedHasSpecials","modifiers","toUpperCase","characterSet","mod","options","newUnmodifiedWords","modifier","join","newWord","guidedLevelIndex","guidedWordLength","guidedNumWords","alphaMap","guidedLikelihoodModified","alphaMapAtLevel","letters","alphabet","vowel","letter","chain","newMarkovChain","generate","randomWordFrom","l","byAlphaMap","split","some","filteredDict","dictionary","lvl","lvlMap","glyphs","charsAtLevel","PracticeModeStringGenerator","language","_sourceText","_textCursor","_sentenceCursor","_sentences","parseSentences","sentence","sentences","wasFound","cursor","cursorAt","isValid","index","startIdx","isLetter","isPeriodMark","brackets","isBracketMark","wantedBrackets","isWantedBracket","wanted","isEndOfSentence","next","isNewLine","sentenceHasOuterBracket","endReached","isApostrophe","prev","splice","findIndex","endIdx","CodeModeStringGenerator","_code","codeLines","_cursor","lines","end","indexOf","line","themes","light","color","dark","ThemeContext","React","createContext","theme","toggleTheme","TrainingText","_raw","_sanitized","chars","includedCharMap","whiteSpaceSanitize","resultStr","ltr","sanitizeStringForGlyphs","Courses","guidedCourse","name","description","levels","English","numbers","punctuation","specials","letterSet","forEach","EnglishQwertyLayout","main","shift","TrainingMode","FontSizes","CodeLanguage","defaultLayout","qwerty","defaultLanguage","defaultText","defaultMode","GUIDED","defaultGenerator","text","defaultCourse","defaultCodeSourceText","defaultState","machineState","trainingMode","trainingStringGenerator","currentUserPressedKeys","Set","trainingString","mistakeCharIndices","wordsPerMinute","successRate","totalSessions","wordsPerMinuteAverage","successRateAverage","uiModeSelectShow","uiSettingsModalShow","uiShowWhiteSpaceSymbols","uiTheme","trainingStringFontSize","practiceSourceText","codeSourceText","testId","FormattedText","props","uniquekey","format","newStr","replaceWhiteSpacesWithSymbols","unsafe","document","createTextNode","p","createElement","appendChild","safe","innerHTML","remove","escapeHtml","replaceWhiteSpacesWithHTML","tag","className","retStr","dangerouslySetInnerHTML","__html","v","data-testid","role","aria-label","current","before","after","e","has","setTimeout","typo","getElementsByClassName","greyed","style","textAlign","VirtualKeyboard","useState","visible","setVisible","id","Form","inline","marginLeft","FormCheck","onChange","checked","marginRight","layout","rowIdx","keyBtn","classes","pressed","size","active","currentKey","labelHtml","keyCapLabel","Object","keys","opt","generateLabelHtml","ModeSelectorModal","Modal","aria-labelledby","centered","Header","closeButton","Title","Body","Button","block","onClick","settrainingmode","onHide","PRACTICE","CODE","setNestedProp","obj","first","rest","value","console","log","SettingsModal","draftSettings","setDraftSettings","handleChange","propPath","newSettings","form","mode","target","htmlFor","width","height","show","Footer","settings","onSubmitChanges","TextDisplay","FontSizeToggle","toggleFn","icon","bxFontSize","Wrapper","styled","div","BigStat","h1","SmallStack","SmallStackLabel","Avg","small","QuickStats","Toolbar","stats","buttons","TypeTrainer","sessionTimer","paused","pauseMark","startMark","Date","now","pausedLength","pause","unPause","getTimeElapsed","Timer","inactivityTimer","state","routeEvent","bind","addEventListener","prepareNewSession","removeEventListener","event","handleKeyDown","resetInactivityTimer","unPauseSession","handleKeyUp","pauseSession","Event","clearTimeout","startInactivityTimer","preventDefault","shouldKeepKeyDownEvent","add","keyCodeisCharKey","isCorrectCharPressed","goToNextChar","isEOF","endSession","setState","startSession","delete","info","logStatus","newState","draftState","table","newStringGenerator","round","nextLevelIndex","currentLvl","minutes","generator","globalUsedKeyCodes","getCurrentLevel","rows","keyCap","belongsToHand","belongsToFingers","belongsToGlobalUsed","Provider","setModeModalShow","setTrainingMode","setSettingsModalShow","applyUserSettings","Container","fluid","levelDescription","ButtonGroup","toggleFontSize","toggleWhiteSpaceSymbols","fontSize","currentActiveKeyCodes","mapGlyphToKeyCode","Component","contextType","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c0221324.chunk.js","sourcesContent":["import { KeyCode } from \"./KeyCode\"\n\n//\n// Virtual Keyboard\n//\n\nexport type KeyCapLabel = { main: string; shift?: string; opt?: string }\nexport type KeyCapLabelMap = { [code in KeyCode]: KeyCapLabel }\n\n\n//\n// Physiological Types\n//\nexport enum Hand {\n  ANY = 'any',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\nexport enum Finger {\n  ANY = \"any\",\n  THUMB = \"thumb\",\n  INDEX = \"index\",\n  MIDDLE = \"middle\",\n  RING = \"ring\",\n  PINKY = \"pinky\",\n}\n\n\nexport type KeyCap = {\n  code: KeyCode\n  label: KeyCapLabel\n  fingerHand: { hand: Hand; finger: Finger }\n}\n\nexport default class Keyboard {\n  private _layout: KeyCap[][]\n  constructor(private _labelMap: KeyCapLabelMap) {\n    this._layout = this.parseLayout(_labelMap)\n  }\n\n  private parseLayout(_labelMap: KeyCapLabelMap) {\n    const keyboard: KeyCap[][] = []\n    for (const [idx, rowCodes] of this._keyCodeLayout.entries()) {\n      keyboard[idx] = []\n      for (const [col, code] of rowCodes.entries()) {\n        keyboard[idx][col] = {\n          code: code as KeyCode,\n          label: _labelMap[code as KeyCode],\n          fingerHand: this._fingerMap[code as KeyCode],\n        }\n      }\n    }\n   return keyboard\n  }\n\n  get layout(): KeyCap[][] {\n    return this._layout\n  }\n  /*\n  get labelMap(): KeyCapLabelMap {\n    return this._labelMap\n  }\n  */\n  get keyCodeLayout(): KeyCode[][] {\n    return this._keyCodeLayout\n  }\n  \n  get fingerMap(): { [key in KeyCode]: { hand: Hand, finger: Finger }} {\n    return this._fingerMap\n  } \n  \n  static keyCodeisCharKey(keyCode: string): boolean {\n  if (keyCode.slice(0, 3) === \"Key\")\n    return true;\n  if (keyCode.slice(0, 5) === \"Digit\")\n    return true;\n  switch (keyCode) {\n    case \"Space\":\n    case \"Backquote\":\n    case \"Minus\":\n    case \"Equal\":\n    case \"BracketLeft\":\n    case \"BracketRight\":\n    case \"Backslash\":\n    case \"Semicolon\":\n    case \"Quote\":\n    case \"Comma\":\n    case \"Period\":\n    case \"Slash\":\n    case 'Enter':\n    case 'Tab':\n      return true;\n    default:\n      return false;\n  }\n}\n  protected readonly _keyCodeLayout: KeyCode[][] = [\n    ['Backquote','Digit1','Digit2','Digit3','Digit4','Digit5','Digit6','Digit7','Digit8','Digit9','Digit0','Minus','Equal','Backspace'],\n    ['Tab','KeyQ','KeyW','KeyE','KeyR','KeyT','KeyY','KeyU','KeyI','KeyO','KeyP','BracketLeft','BracketRight','Backslash'],\n    ['CapsLock','KeyA','KeyS','KeyD','KeyF','KeyG','KeyH','KeyJ','KeyK','KeyL','Semicolon','Quote','Enter'],\n    ['ShiftLeft','KeyZ','KeyX','KeyC','KeyV','KeyB','KeyN','KeyM','Comma','Period','Slash','ShiftRight'],\n    ['ControlLeft','AltLeft','Space','AltRight','ControlRight']\n  ]\n  protected readonly _fingerMap: { [key in KeyCode]: { hand: Hand, finger: Finger }} = {\n    NONE: { hand: Hand.ANY, finger: Finger.ANY },\n    Backquote: { hand: Hand.LEFT, finger: Finger.PINKY },\n    Digit1: { hand: Hand.LEFT, finger: Finger.PINKY },\n    Digit2: { hand: Hand.LEFT, finger: Finger.RING },\n    Digit3: { hand: Hand.LEFT, finger: Finger.MIDDLE },\n    Digit4: { hand: Hand.LEFT, finger: Finger.INDEX },\n    Digit5: { hand: Hand.LEFT, finger: Finger.INDEX },\n    Digit6: { hand: Hand.LEFT, finger: Finger.INDEX },\n    Digit7: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    Digit8: { hand: Hand.RIGHT, finger: Finger.MIDDLE },\n    Digit9: { hand: Hand.RIGHT, finger: Finger.RING },\n    Digit0: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    Minus: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    Equal: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    Backspace: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    Tab: { hand: Hand.LEFT, finger: Finger.PINKY },\n    KeyQ: { hand: Hand.LEFT, finger: Finger.PINKY },\n    KeyW: { hand: Hand.LEFT, finger: Finger.RING },\n    KeyE: { hand: Hand.LEFT, finger: Finger.MIDDLE },\n    KeyR: { hand: Hand.LEFT, finger: Finger.INDEX },\n    KeyT: { hand: Hand.LEFT, finger: Finger.INDEX },\n    KeyY: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    KeyU: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    KeyI: { hand: Hand.RIGHT, finger: Finger.MIDDLE },\n    KeyO: { hand: Hand.RIGHT, finger: Finger.RING },\n    KeyP: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    BracketLeft: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    BracketRight: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    Backslash: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    CapsLock: { hand: Hand.LEFT, finger: Finger.PINKY },\n    KeyA: { hand: Hand.LEFT, finger: Finger.PINKY },\n    KeyS: { hand: Hand.LEFT, finger: Finger.RING },\n    KeyD: { hand: Hand.LEFT, finger: Finger.MIDDLE },\n    KeyF: { hand: Hand.LEFT, finger: Finger.INDEX },\n    KeyG: { hand: Hand.LEFT, finger: Finger.INDEX },\n    KeyH: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    KeyJ: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    KeyK: { hand: Hand.RIGHT, finger: Finger.MIDDLE },\n    KeyL: { hand: Hand.RIGHT, finger: Finger.RING },\n    Semicolon: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    Quote: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    Enter: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    ShiftLeft: { hand: Hand.LEFT, finger: Finger.PINKY },\n    KeyZ: { hand: Hand.LEFT, finger: Finger.PINKY },\n    KeyX: { hand: Hand.LEFT, finger: Finger.RING },\n    KeyC: { hand: Hand.LEFT, finger: Finger.MIDDLE },\n    KeyV: { hand: Hand.LEFT, finger: Finger.INDEX },\n    KeyB: { hand: Hand.ANY, finger: Finger.INDEX },\n    KeyN: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    KeyM: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    Comma: { hand: Hand.RIGHT, finger: Finger.MIDDLE },\n    Period: { hand: Hand.RIGHT, finger: Finger.RING },\n    Slash: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    ShiftRight: { hand: Hand.RIGHT, finger: Finger.PINKY },\n    ControlLeft: { hand: Hand.LEFT, finger: Finger.PINKY },\n    AltLeft: { hand: Hand.LEFT, finger: Finger.MIDDLE },\n    Space: { hand: Hand.ANY, finger: Finger.THUMB },\n    AltRight: { hand: Hand.RIGHT, finger: Finger.INDEX },\n    ControlRight: { hand: Hand.RIGHT, finger: Finger.RING }\n  }\n}\n\n","import { CourseLevel } from \"../assets/courses/Courses\";\nimport CharacterSet, { Character } from \"../core/CharacterSet\";\nimport Keyboard, { Hand, Finger } from \"../core/Keyboard\";\nimport { KeyCode } from \"../core/KeyCode\";\n\nexport const charsAtCourseLevel = (charSet: CharacterSet, level: CourseLevel, keyboard: Keyboard): Character[] => {\n\n  const filteredCodes = codesAtCourseLevel(charSet, level, keyboard)\n  \n  return charSet.characters.filter(({code}) => code.every(c => filteredCodes.includes(c)))\n    \n}\n\nexport const codesAtCourseLevel = (charSet: CharacterSet, level: CourseLevel, keyboard: Keyboard): KeyCode[] => {\n  const specifiesRows = level.keyBoardRows != null;\n  const specifiesHand = level.hand != null;\n  const specifiesFingers = level.fingers != null && level.fingers.length > 0;\n\n  if (!specifiesRows && !specifiesHand && !specifiesFingers) return charSet.uniqueKeyCodes();\n  \n  const keyCodes = charSet.uniqueKeyCodes()\n  const rowCodes: KeyCode[] = []\n  if (specifiesRows) {\n    rowCodes.push(...level.keyBoardRows.reduce((codes: KeyCode[], row) => codes.concat(keyboard.keyCodeLayout[row]), []))\n  }\n  return keyCodes.filter(code => {\n    if (specifiesRows) {\n      const codeIntersectsRows = rowCodes.includes(code);\n      // filter out rows\n      if (!codeIntersectsRows) return false;\n    }\n    if (specifiesHand) {\n      // filter out hand\n      const codeIntersectsHand = level.hand === Hand.ANY || level.hand === keyboard.fingerMap[code].hand;\n      if (!codeIntersectsHand) return false;\n    }\n    // filter out finger\n    if (specifiesFingers) {\n      const codeIntersectsFinger = level.fingers?.[0] === Finger.ANY ||\n        level.fingers?.includes(keyboard.fingerMap[code].finger);\n      if (!codeIntersectsFinger) return false;\n    }\n    return true\n  })\n}","const basicSanitize = (str: string): string => {\n  let sanitized = str\n  // if (/\\S/.test(str)) str.trim()\n  sanitized = sanitized.replace(/\\r/g, \"\\n\") // (unescaped) Carriage Return to Line Feed\n  sanitized = sanitized.replace(/[’‚]/g, \"'\") // Curly single-quote to standard\n  sanitized = sanitized.replace(/[“”„]/g, '\"') // Curly double-quotes to standard\n  sanitized = sanitized.replace(/…/g, \"...\") // Ellipsis to three periods\n  return sanitized\n}\n\nconst whiteSpaceSanitize = (str: string) => {\n  let sanitized = str\n  sanitized = sanitized.replace(/\\t/g, \" \") // Tabs\n  sanitized = sanitized.replace(/(\\n\\s*){3,}/g, \"\\n\\n\") // Multi returns to double\n  sanitized = sanitized.replace(/  +/g, \" \") // Multi space\n  return sanitized\n}\nexport function sanitizeStringForGlyphs(str: string | undefined, chars?: string[]): string {\n  if (str == null) return \"\"\n  if (chars == null) return str\n\n  const includedCharMap: { [char: string]: boolean } = {\n    \" \": true,\n  }\n  \n  for (const char of chars) {\n    if (!includedCharMap[char]) {\n      includedCharMap[char] = true\n      includedCharMap[char.toUpperCase()] = true\n    }\n  }\n  \n  let sanitized = whiteSpaceSanitize(basicSanitize(str))\n  \n  let resultStr = \"\"\n  for (const ltr of sanitized) {\n    if (includedCharMap[ltr]) {\n      resultStr += ltr\n    }\n  }\n\n  return resultStr\n}\nexport function sanitizeCode(str: string): string {\n  let sanitized = String.raw`${str}`\n  sanitized = basicSanitize(sanitized)\n  function tabs(match: string, p1: string, offset: number, string: string) {\n    return '\\n'+p1.replace(/ {2}/g, '\\t')\n  }\n  sanitized = sanitized.replace(/\\n([ {2}]+)/g, tabs)\n  return String.raw`${sanitized}`\n}\n","import { KeyCode } from \"./KeyCode\"\n\nexport type CharacterType = \"NONE\" | \"LOWERCASE_LETTER\" | \"NUMBER\" | \"PUNCTUATION\" | \"SPECIAL\" | \"PROGRAMMING\" | \"WHITESPACE\"\n\nexport type CharacterBehavior = \"NONE\" | \"PREPEND\" | \"APPEND\" | \"PREPEND_OR_APPEND\" | \"SPLIT\" | \"BRACKET\" | \"OPERATOR\"\n\nexport type Character = {\n  code: KeyCode[]\n  glyph: string\n  bracketPair?: string\n  type: CharacterType\n  behavior: CharacterBehavior\n}\n\nexport default class CharacterSet {\n  private _letterSet: Character[]\n  private _numberSet: Character[]\n  private _punctSet: Character[]\n  private _specialSet: Character[]\n  constructor(private _characters: Character[]) {\n    this._letterSet = this.ofType('LOWERCASE_LETTER')\n    this._numberSet = this.ofType('NUMBER')\n    this._punctSet  = this.ofType(\"PUNCTUATION\")\n    this._specialSet = this.ofType(\"SPECIAL\")\n  }\n  get characters() {\n    return this._characters\n  }\n  get letterSet() {\n    return this._letterSet\n  }\n  get numberSet() {\n    return this._numberSet\n  }\n  get punctSet() {\n    return this._punctSet\n  }\n  get specialSet() {\n    return this._specialSet\n  }\n  ofType(t: CharacterType): Character[] {\n    return this._characters.filter(({type}) => t === type)\n  }\n  static uniqueGlyphs(cs: Character[]): string[] {\n    return cs.reduce((uniqueGlyphs: string[], { glyph, bracketPair }) => {\n      if (uniqueGlyphs.includes(glyph) || glyph.length > 1) return uniqueGlyphs\n      uniqueGlyphs = uniqueGlyphs.concat(glyph)\n      if (bracketPair == null || uniqueGlyphs.includes(bracketPair)) return uniqueGlyphs\n      return uniqueGlyphs.concat(bracketPair)\n    }, [])\n  }\n\n  uniqueKeyCodes(): KeyCode[] {\n    return this._characters.reduce((arr: KeyCode[], character) => {\n      for (const code of character.code) {\n        if (!arr.includes(code)) {\n          arr = arr.concat(code)\n        }\n      }\n      return arr\n    }, [])\n  }\n\n  mapGlyphToKeyCode(glyph: string): KeyCode {\n    if (glyph == null) return \"NONE\"\n    glyph = glyph.toLowerCase()\n    const character = this._characters.find(character => character.code.length === 1 && character.glyph === glyph)\n    if (character != null) return character.code[0]\n    return \"NONE\"\n  }\n}\n","import { Character } from \"../CharacterSet\"\n\nexport interface ICharacterInserter {\n  apply(str: string, character: Character): string\n}\n\n\nexport class PrependCharacterInserter implements ICharacterInserter {\n  apply(str: string, character: Character): string {\n    if (character.behavior !== 'PREPEND') return str\n    return character.glyph + str\n  }\n}\n\nexport class AppendCharacterInserter\n implements ICharacterInserter {\n  apply(str: string, character: Character): string {\n    if (character.behavior !== 'APPEND') return str\n    return str + character.glyph\n  }\n}\n\nexport class PrependOrAppendCharacterInserter\n implements ICharacterInserter {\n  apply(str: string, character: Character): string {\n    if (character.behavior !== 'PREPEND_OR_APPEND') return str\n    return Math.random() < 0.5 ? character.glyph + str : str + character.glyph\n  }\n}\n\nexport class BracketCharacterInserter\n implements ICharacterInserter {\n  apply(str: string, character: Character): string {\n    if (character.behavior !== 'BRACKET') return str\n    if (character.bracketPair != null) return character.glyph + str + character.bracketPair\n    return character.glyph + str + character.glyph\n  }\n}\n\nexport class SplitCharacterInserter  implements ICharacterInserter {\n  constructor(private vowels: string[]) {}\n  apply(str: string, character: Character): string {\n    if (character.behavior !== 'SPLIT') return str\n    if (str.length < 5) return str // ignore short strings\n    const isVowel = (char: string): boolean => this.vowels.includes(char)\n    // try to split somewhere after 2nd and before 2nd-to-last letters\n    // and not between two vowels\n    let splitIndices: number[] = []\n    for (let i = 2; i < str.length - 3; i++) {\n      if (!isVowel(str[i]) && !isVowel(str[i + 1])) {\n        splitIndices.push(i)\n      }\n    }\n    const noSplitFound = splitIndices.length === 0\n    if (noSplitFound) return str\n\n    const randomIndex = splitIndices.length > 1 ? splitIndices[Math.floor(Math.random() * splitIndices.length)] : splitIndices[0]\n    let splitIndex = randomIndex\n    \n    return str.slice(0, splitIndex) + character.glyph + str.slice(splitIndex)\n  }\n}\n\nexport class OperatorCharacterInserter\n implements ICharacterInserter {\n  apply(str: string, character: Character): string {\n    if (character.behavior !== 'OPERATOR') return str\n    return str + ' ' + character.glyph\n  }\n}\n\n\nexport default class CharacterInserter {\n  constructor(private vowels: string[]) {}\n  apply(str: string, character: Character): string {\n    let inserter\n    switch (character.behavior) {\n      case 'PREPEND':\n        inserter = new PrependCharacterInserter()\n        break\n      case 'APPEND':\n        inserter = new AppendCharacterInserter()\n        break\n      case 'PREPEND_OR_APPEND':\n        inserter = new PrependOrAppendCharacterInserter()\n        break\n      case 'BRACKET':\n        inserter = new BracketCharacterInserter()\n        break\n      case 'SPLIT':\n        inserter = new SplitCharacterInserter(this.vowels)\n        break\n      case 'OPERATOR':\n        inserter = new OperatorCharacterInserter()\n        break\n      default:\n        return str\n    }\n    return inserter.apply(str, character)\n  }\n}\n","/**\n@license Foswig.js | (c) Glenn Conner. | https://github.com/mrsharpoblunto/foswig.js/blob/master/LICENSE\n@format\n*/\n\ninterface MarkovNode {\n  character: string;\n  neighbors: Array<MarkovNode | null>;\n}\n\ninterface TrieNode {\n  children: {[key: string]: TrieNode};\n}\n\ntype RandomGenerator = () => number;\n\nexport default class MarkovChain {\n  private order: number;\n  private duplicates: TrieNode;\n  private start: MarkovNode;\n\n  /**\n   * order indicates how many previous characters to take into account when picking the next. A lower number represents more random words, whereas a higher number will result in words that match the input words more closely.\n   */\n  constructor(order: number, words: Array<string>) {\n    this.order = order;\n    this.duplicates = {children: {}};\n    this.start = {character: '', neighbors: []};\n    this.init(words);\n  }\n\n  private init(words: Array<string>): void {\n    const map: {[key: string]: MarkovNode} = {};\n    for (const word of words) {\n      this.addToDuplicatesTrie(word.toLowerCase());\n\n      let previous = this.start;\n      let key = '';\n      for (let i = 0; i < word.length; ++i) {\n        const ch = word[i];\n        key += ch;\n        if (key.length > this.order) {\n          key = key.substr(1);\n        }\n        let newNode = map[key];\n        if (!newNode) {\n          newNode = {character: ch, neighbors: []};\n          map[key] = newNode;\n        }\n\n        previous.neighbors.push(newNode);\n        previous = newNode;\n      }\n      //link to end node.\n      previous.neighbors.push(null);\n    }\n  }\n\n  /**\n   * Adds a word and all its substrings to a duplicates trie to\n   * ensure that generated words are never an exact match or substring\n   * of a word in the input dictionary. Building a trie allows us\n   * to efficiently search for these duplicates later without\n   * having to do O(N) comparision checks over the entire dictionary\n   */\n  private addToDuplicatesTrie(word: string): void {\n    if (word.length > 1) {\n      this.addToDuplicatesTrie(word.substr(1));\n    }\n\n    let currentNode = this.duplicates;\n    for (let i = 0; i < word.length; ++i) {\n      let childNode = currentNode.children[word[i]];\n      if (!childNode) {\n        childNode = {children: {}};\n        currentNode.children[word[i]] = childNode;\n      }\n      currentNode = childNode;\n    }\n  }\n\n  /**\n   * Check to see if a word is a match to any substring in the input\n   * dictionary in O(N) time, where N is the number of characters in the\n   * word rather than the number of words in the dictionary.\n   * @param {string} word The word we want to find out whether it is a\n   * duplicate of a substring in the input dictionary.\n   */\n  private isDuplicate(word: string): boolean {\n    word = word.toLowerCase();\n    let currentNode = this.duplicates;\n    for (let i = 0; i < word.length; ++i) {\n      const childNode = currentNode.children[word[i]];\n      if (!childNode) return false;\n      currentNode = childNode;\n    }\n    return true;\n  }\n\n  generate({\n    min = 0,\n    max = 0,\n    allowDuplicates = true,\n    maxAttempts = 25,\n    random = Math.random,\n  }: {\n    min?: number;\n    max?: number;\n    allowDuplicates?: boolean;\n    maxAttempts?: number;\n    random?: RandomGenerator;\n  }): string {\n    let word;\n    let repeat;\n    let attempts = 0;\n    do {\n      repeat = false;\n      let nextNodeIndex = Math.floor(random() * this.start.neighbors.length);\n      let currentNode = this.start.neighbors[nextNodeIndex];\n      word = '';\n\n      while (currentNode && (max <= 0 || word.length <= max)) {\n        word += currentNode.character;\n        nextNodeIndex = Math.floor(random() * currentNode.neighbors.length);\n        currentNode = currentNode.neighbors[nextNodeIndex];\n      }\n      if (\n        (max > 0 && word.length > max) ||\n        word.length < min\n      ) {\n        repeat = true;\n      }\n    } while (\n      // we don't want to output any exact replicas from the input dictionary\n      (repeat || (!allowDuplicates && this.isDuplicate(word))) &&\n      (maxAttempts <= 0 || ++attempts < maxAttempts)\n    );\n    if (maxAttempts > 0 && attempts >= maxAttempts) {\n      throw new Error(\n        'Unable to generate a word with the given parameters after ' +\n          attempts +\n          ' attempts',\n      );\n    }\n    return word;\n  }\n}\n","import CharacterSet, { Character } from \"../CharacterSet\"\nimport CharacterInserter from \"./CharacterInserter\"\n\nconst randomEle = (arr: any[]) => arr[Math.floor(Math.random() * arr.length)]\n\nexport const CapsWordModifier = () => (word: string): string => {\n  return word.slice(0, 1).toUpperCase().concat(word.slice(1))\n}\n\nexport const NumsWordModifier = (numberSet: Character[]) => (word: string): string => {\n  if (numberSet.length === 0) return word\n  return word + randomEle(numberSet).glyph\n}\n\nexport const PunctWordModifier = (punctSet: Character[], inserter: CharacterInserter) => (word: string): string => {\n  if (punctSet.length === 0) return word\n  return inserter.apply(word, randomEle(punctSet))\n}\n\n\nexport const SpecialWordModifier = (specialSet: Character[], inserter: CharacterInserter) => (word: string): string => {\n  if (specialSet.length === 0) return word\n  return inserter.apply(word, randomEle(specialSet))\n}\n\nconst WordModifiers = [CapsWordModifier, NumsWordModifier, PunctWordModifier, SpecialWordModifier]\nexport default WordModifiers\n\n","import { CourseLevel } from \"../../assets/courses/Courses\"\nimport { charsAtCourseLevel } from \"../../utils/course-utils\"\nimport { sanitizeCode } from \"../../utils/text-utils\"\nimport CharacterSet, { CharacterType, Character } from \"../CharacterSet\"\nimport Keyboard from \"../Keyboard\"\nimport { Language } from \"../Language\"\nimport CharacterInserter from \"./CharacterInserter\"\nimport MarkovChain from \"./MarkovChain\"\nimport { CapsWordModifier, NumsWordModifier, PunctWordModifier, SpecialWordModifier } from \"./WordModifiers\"\n\nexport interface TrainingStringGenerator {\n  generate(options?: any): string\n}\n\nexport class MockTrainingStringGenerator implements TrainingStringGenerator {\n  constructor(private trainingString: string) {}\n  generate(): string {\n    return this.trainingString\n  }\n}\n\nexport class GuidedModeStringGenerator implements TrainingStringGenerator {\n  constructor(private _keyboard: Keyboard, private _language: Language, private _courseLevels: CourseLevel[]) {}\n\n  generate(options: any = {}): string {\n    let words = this.newUnmodifiedWords(options)\n    const modifier = this.newWordModifier(options)\n    words = modifier(words)\n    return words.join(\" \")\n  }\n\n  private newWordModifier = ({\n    guidedHasCaps = false,\n    guidedHasNumbers = false,\n    guidedHasPunctuation = false,\n    guidedHasSpecials = false,\n  }) => {\n    const inserter = new CharacterInserter(this._language.vowels)\n    const modifiers: { (word: string): string }[] = []\n    if (guidedHasCaps) modifiers.push(CapsWordModifier())\n    if (guidedHasNumbers) modifiers.push(NumsWordModifier(this._language.characterSet.numberSet))\n    if (guidedHasPunctuation) modifiers.push(PunctWordModifier(this._language.characterSet.punctSet, inserter))\n    if (guidedHasSpecials) modifiers.push(SpecialWordModifier(this._language.characterSet.specialSet, inserter))\n    return (words: string[]) => {\n      if (modifiers.length !== 0)\n        return words.map(word => {\n          for (const mod of modifiers) {\n            word = mod(word)\n          }\n          return word\n        })\n      return words\n    }\n  }\n\n  private newUnmodifiedWords(options: any): string[] {\n    // get markovchain based on restricted dictionary (based on fullcharset/traininglevel)\n    const {\n      guidedLevelIndex,\n      guidedWordLength = { min: 3, max: 12 },\n      guidedNumWords = 10,\n      guidedLikelihoodModified,\n    } = options\n    const alphaMap = this.alphaMapAtLevel(guidedLevelIndex)\n    const letters = this._language.alphabet.filter(ch => alphaMap[ch] != null)\n    const vowels = this._language.vowels.filter(vowel => alphaMap[vowel] != null)\n    // hardcoded expeption for english word generation\n    const hasEnoughVowels = vowels.length >= 2 && !letters.every(letter => \"iuoy\".includes(letter))\n    const wantsMarkovChain = hasEnoughVowels\n    let newWord\n    if (wantsMarkovChain) {\n      const chain = this.newMarkovChain(alphaMap)\n      newWord = (): string => chain.generate(guidedWordLength)\n    } else {\n      newWord = (): string => this.randomWordFrom(guidedWordLength, letters)\n    }\n    const words: Array<string> = []\n    while (words.length < guidedNumWords) {\n      words.push(newWord())\n    }\n    return words\n  }\n  randomWordFrom(length: { min: number; max: number } = { min: 6, max: 6 }, letters: string[]): string {\n    const l = length.min + Math.floor(Math.random() * (length.max - length.min))\n    let word = \"\"\n    for (let i = 0; i < l; i++) {\n      const letter = letters[Math.floor(Math.random() * letters.length)]\n      word = word.concat(letter)\n    }\n    return word\n  }\n  private newMarkovChain(alphaMap: { [ch: string]: true } = this._language.alphaMap): MarkovChain {\n    const byAlphaMap = (word: string) => !word.split(\"\").some(ch => alphaMap[ch] == null)\n    const filteredDict = this._language.dictionary.filter(byAlphaMap)\n    return new MarkovChain(3, filteredDict)\n  }\n\n  private charsAtLevel(lvl: number, type: CharacterType = \"LOWERCASE_LETTER\"): Character[] {\n    return charsAtCourseLevel(this._language.characterSet, this._courseLevels[lvl], this._keyboard).filter(\n      ({ type: t }) => t === type\n    )\n  }\n\n  private alphaMapAtLevel(lvl: number): { [ch: string]: true } {\n    const level = this._courseLevels[lvl]\n\n    if (level == null) return this._language.alphaMap\n\n    const lvlMap: { [ch: string]: true } = {}\n    const glyphs = CharacterSet.uniqueGlyphs(this.charsAtLevel(lvl))\n    for (const glyph of glyphs) lvlMap[glyph] = true\n    lvlMap[\" \"] = true // special case for space\n    return lvlMap\n  }\n}\n\nexport class PracticeModeStringGenerator implements TrainingStringGenerator {\n  private _textCursor: number\n  private _sentenceCursor: number\n  private _sentences: string[]\n\n  constructor(private language: Language, private _sourceText: string) {\n    // TODO: ensure sourceText has been sanitized\n    // TODO: make language-aware\n    this._textCursor = 0\n    this._sentenceCursor = 0\n    this._sentences = this.parseSentences()\n  }\n\n  generate(): string {\n    // Generate subsequent sentence on each call\n    const sentence = this._sentences[this._sentenceCursor]\n    this._sentenceCursor = (this._sentenceCursor + 1) % this._sentences.length\n    return sentence ? sentence : \"\"\n  }\n\n  /*  reset(): void {\n    this._sentenceCursor = this._textCursor = 0\n  } */\n\n  get sourceText(): string {\n    return this._sourceText\n  }\n\n  private parseSentences(): string[] {\n    const sentences: string[] = []\n    let sentence = this.sentence()\n    while (sentence.wasFound) {\n      sentences.push(sentence.str!)\n      sentence = this.sentence()\n    }\n    return sentences\n  }\n\n  private sentence(): { wasFound: boolean; str?: string } {\n    // TODO: make dynamic and language-agnostic\n    let cursor = this.cursorAt()\n    const minimalLength = 5 // sentences shorter than this will be merged\n    if (!cursor.isValid) return { wasFound: false }\n    const isWhiteSpace = (ch: string) => ch === \" \" || ch === \"\\t\" || ch === \"\\n\"\n\n    // Move cursor to first non-white character\n    while (isWhiteSpace(cursor.ch)) {\n      cursor = this.cursorAt(cursor.index + 1)\n    }\n    if (!cursor.isValid) return { wasFound: false }\n    const startIdx = cursor.index\n\n    // Move cursor to the end of sentence\n    const isLetter = (ch: string) => this.language.alphaMap[ch] != null\n    const isPeriodMark = (ch: string): boolean => ch === \".\" || ch === \"!\" || ch === \"?\"\n    const isNewLine = (ch: string): boolean => ch === '\\n'\n    const brackets = this.language.characterSet.punctSet.filter(({ behavior }) => behavior === \"BRACKET\")\n    const isBracketMark = (ch: string): boolean => CharacterSet.uniqueGlyphs(brackets).includes(ch) // TODO: include parentheses, brackets...\n    const wantedBrackets: string[] = []\n    const isWantedBracket = (ch: string): boolean => wantedBrackets.some(wanted => ch === wanted)\n\n    const isEndOfSentence = (cursor: { isValid: boolean; index: number; ch: string }): boolean => {\n      const next = this.cursorAt(cursor.index + 1)\n      if (!next.isValid) return true\n      if (cursor.index - startIdx < minimalLength) return false\n      if ((isPeriodMark(cursor.ch) || isBracketMark(cursor.ch)) && isNewLine(next.ch)) return true\n      if (wantedBrackets.length === 0) {\n        if (isPeriodMark(cursor.ch) && !isPeriodMark(next.ch)) return true\n        if (isBracketMark(cursor.ch) && sentenceHasOuterBracket) return true\n      }\n      return false\n    }\n\n    let sentenceHasOuterBracket = isBracketMark(cursor.ch)\n    let endReached = false\n    const isApostrophe = (ch: string) => {\n      if (ch !== \"'\") return false\n      const prev = this.cursorAt(cursor.index - 1)\n      const next = this.cursorAt(cursor.index + 1)\n      if (!next.isValid) return false\n      return isLetter(prev.ch) && isLetter(next.ch)\n    } // TODO: add support for Torres', n', etc\n    while (!endReached) {\n      if (!cursor.isValid) {\n        endReached = true\n      } else {\n        if (isBracketMark(cursor.ch) && !isApostrophe(cursor.ch)) {\n          if (isWantedBracket(cursor.ch)) {\n            wantedBrackets.splice(\n              wantedBrackets.findIndex(wanted => cursor.ch === wanted),\n              1\n            )\n          } else {\n            const { glyph, bracketPair } = brackets.find(\n              ({ glyph, bracketPair }) => cursor.ch === glyph || cursor.ch === bracketPair\n            ) as { glyph: string; bracketPair: string }\n            wantedBrackets.push(bracketPair != null ? bracketPair : glyph) // TODO: generalize\n          }\n        }\n        endReached = isEndOfSentence(cursor)\n      }\n      if (!endReached) cursor = this.cursorAt(cursor.index + 1)\n    }\n    const endIdx = cursor.index\n\n    // If end == start position, return no sentence found\n    if (startIdx === endIdx) return { wasFound: false }\n\n    // Return the found sentence\n    const sentence = this._sourceText.slice(startIdx, endIdx + 1)\n    this._textCursor = endIdx + 1\n    return { wasFound: true, str: sentence }\n  }\n\n  private cursorAt(idx: number = this._textCursor) {\n    if (idx < 0 || idx > this._sourceText.length) return { isValid: false, index: idx, ch: \"\" }\n    return { isValid: true, index: idx, ch: this._sourceText[idx] }\n  }\n}\n\nexport class CodeModeStringGenerator implements TrainingStringGenerator {\n  private _cursor: number\n  private _code: string\n  codeLines: number\n  constructor(_code: string, codeLines: number = 4) {\n    this._code = sanitizeCode(_code)\n    this._cursor = 0\n    this.codeLines = codeLines\n  }\n  generate(options?: any): string {\n    const lines: string[] = []\n    let cursor = this._cursor\n    let start,\n      end = 0\n    for (let i = 0; i < this.codeLines; i++) {\n      start = cursor\n      end = this._code.indexOf(\"\\n\", start) + 1\n      if (end <= 0) end = this._code.length\n      const line = this._code.slice(start, end)\n      lines.push(line)\n      cursor = end\n      if (cursor >= this._code.length) break\n    }\n    this._cursor = cursor % this._code.length\n    return lines.join(\"\")\n  }\n}\n","import React from 'react'\nimport { CSSCustomProperties } from './css'\n\nconst light: CSSCustomProperties = {\n  \"--color-primary\": \"#fff\",\n  \"--color-secondary\": \"#eee\",\n  \"--color-tertiary\": \"#ddd\",\n  \n  \"--text-primary\": \"#0e0e0e\",\n  \"--text-secondary\": \"#999\",\n\n  \"--color-accent\": \"#5e5e5e\",\n  \"--text-accent\": \"#eee\",\n  \"--text-background-highlight\": \"#66ffff\",\n  \"--text-color-highlight\": \"#ffffff\",\n\n  \"--mistake\": \"#ff6666\",\n  \"--correct\": \"#b3ff66\",\n  color: \"var(--text-primary)\"\n}\n\nconst dark: CSSCustomProperties = {\n  \"--color-primary\": \"#303030\",\n  \"--color-secondary\": \"#777\",\n  \"--color-tertiary\": \"#555\",\n  \n  \"--text-primary\": \"#eee\",\n  \"--text-secondary\": \"#999\",\n  \n  \"--color-accent\": \"#eee\",\n  \"--text-accent\": \"#111\",\n  \"--text-background-highlight\": \"#66ffff\",\n  \"--text-color-highlight\": \"#ffffff\",\n  \"--mistake\": \"#ff6666\",\n  \"--correct\": \"#b3ff66\",\n  color: \"var(--text-primary)\"\n}\n\nexport const themes: { [index: string]: CSSCustomProperties } = {\n  light: light,\n  dark: dark,\n}\n\nexport const ThemeContext = React.createContext({\n  theme: themes.light,\n  toggleTheme: (): void => { /* toggleFn() */ }\n})","import { sanitizeStringForGlyphs } from \"../utils/text-utils\";\nimport { Language } from \"./Language\";\n\nexport default class TrainingText {\n    private _sanitized: string\n    constructor(private _raw: string, language: Language) {\n        this._sanitized = sanitizeStringForGlyphs(this._raw, language.uniqueGlyphs)\n    }\n    get text() {\n        return this._sanitized\n    }\n    get raw() {\n        return this._raw\n    }\n}","import { Hand, Finger } from \"../../core/Keyboard\"\n\n\nexport interface CourseLevel {\n  description: string\n  keyBoardRows: number[]\n  hand: Hand\n  fingers: Finger[]\n}\nexport type Course = {\n  name: string\n  description: string\n  levels: CourseLevel[]\n}\n\n/* const Fingers: Course = {\n  name: \"Finger by finger\",\n  description: \"TODO\",\n  levels: [\n    { description: \"Both indexes\", hand: Hand.ANY, fingers: [Finger.THUMB, Finger.INDEX] },\n    { description: \"Both indexes\", hand: Hand.ANY, fingers: [Finger.THUMB, Finger.INDEX, Finger.MIDDLE] },\n    { description: \"Both indexes\", hand: Hand.ANY, fingers: [Finger.THUMB, Finger.INDEX, Finger.MIDDLE, Finger.RING] },\n    { description: \"Both indexes\", hand: Hand.ANY, fingers: [Finger.ANY] },\n  ],\n} */\n\nconst GuidedCourse: Course = {\n  name: \"Guided Course\",\n  description: \"TODO\",\n  levels: [\n    { description: \"Home row; left hand; index\", keyBoardRows: [2], hand: Hand.LEFT, fingers: [Finger.INDEX] },\n    {\n      description: \"Home row; left hand; index, middle\",\n      keyBoardRows: [2],\n      hand: Hand.LEFT,\n      fingers: [Finger.INDEX, Finger.MIDDLE],\n    },\n    {\n      description: \"Home row; left hand; index, middle, ring\",\n      keyBoardRows: [2],\n      hand: Hand.LEFT,\n      fingers: [Finger.INDEX, Finger.MIDDLE, Finger.RING],\n    },\n    { description: \"Home row; left hand; any\", keyBoardRows: [2], hand: Hand.LEFT, fingers: [Finger.ANY] },\n    { description: \"Home row; right hand; index\", keyBoardRows: [2], hand: Hand.RIGHT, fingers: [Finger.INDEX] },\n    {\n      description: \"Home row; right hand; index, middle\",\n      keyBoardRows: [2],\n      hand: Hand.RIGHT,\n      fingers: [Finger.INDEX, Finger.MIDDLE],\n    },\n    {\n      description: \"Home row; right hand; index, middle, ring\",\n      keyBoardRows: [2],\n      hand: Hand.RIGHT,\n      fingers: [Finger.INDEX, Finger.MIDDLE, Finger.RING],\n    },\n    { description: \"Home row; right hand; any\", keyBoardRows: [2], hand: Hand.RIGHT, fingers: [Finger.ANY] },\n    { description: \"Home row; full\", keyBoardRows: [2], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Top row; left hand; index\", keyBoardRows: [1], hand: Hand.LEFT, fingers: [Finger.INDEX] },\n    {\n      description: \"Top row; left hand; index, middle\",\n      keyBoardRows: [1],\n      hand: Hand.LEFT,\n      fingers: [Finger.INDEX, Finger.MIDDLE],\n    },\n    {\n      description: \"Top row; left hand; index, middle, ring\",\n      keyBoardRows: [1],\n      hand: Hand.LEFT,\n      fingers: [Finger.INDEX, Finger.MIDDLE, Finger.RING],\n    },\n    { description: \"Top row; left hand; any\", keyBoardRows: [1], hand: Hand.LEFT, fingers: [Finger.ANY] },\n    { description: \"Top row; right hand; index\", keyBoardRows: [1], hand: Hand.RIGHT, fingers: [Finger.INDEX] },\n    {\n      description: \"Top row; right hand; index, middle\",\n      keyBoardRows: [1],\n      hand: Hand.RIGHT,\n      fingers: [Finger.INDEX, Finger.MIDDLE],\n    },\n    {\n      description: \"Top row; right hand; index, middle, ring\",\n      keyBoardRows: [1],\n      hand: Hand.RIGHT,\n      fingers: [Finger.INDEX, Finger.MIDDLE, Finger.RING],\n    },\n    { description: \"Top row; right hand; any\", keyBoardRows: [1], hand: Hand.RIGHT, fingers: [Finger.ANY] },\n    { description: \"Top row; full\", keyBoardRows: [1], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Bottom row; left hand; index\", keyBoardRows: [3], hand: Hand.LEFT, fingers: [Finger.INDEX] },\n    {\n      description: \"Bottom row; left hand; index, middle\",\n      keyBoardRows: [3],\n      hand: Hand.LEFT,\n      fingers: [Finger.INDEX, Finger.MIDDLE],\n    },\n    {\n      description: \"Bottom row; left hand; index, middle, ring\",\n      keyBoardRows: [3],\n      hand: Hand.LEFT,\n      fingers: [Finger.INDEX, Finger.MIDDLE, Finger.RING],\n    },\n    { description: \"Bottom row; left hand; any\", keyBoardRows: [3], hand: Hand.LEFT, fingers: [Finger.ANY] },\n    { description: \"Bottom row; right hand; index\", keyBoardRows: [3], hand: Hand.RIGHT, fingers: [Finger.INDEX] },\n    {\n      description: \"Bottom row; right hand; index, middle\",\n      keyBoardRows: [3],\n      hand: Hand.RIGHT,\n      fingers: [Finger.INDEX, Finger.MIDDLE],\n    },\n    {\n      description: \"Bottom row; right hand; index, middle, ring\",\n      keyBoardRows: [3],\n      hand: Hand.RIGHT,\n      fingers: [Finger.INDEX, Finger.MIDDLE, Finger.RING],\n    },\n    { description: \"Bottom row; right hand; any\", keyBoardRows: [3], hand: Hand.RIGHT, fingers: [Finger.ANY] },\n    { description: \"Bottom row; full\", keyBoardRows: [3], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Home row; full\", keyBoardRows: [2], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Top row; full\", keyBoardRows: [1], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Home + Top full\", keyBoardRows: [1, 2], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Home + Bottome full\", keyBoardRows: [2, 3], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Full letters\", keyBoardRows: [1, 2, 3], hand: Hand.ANY, fingers: [Finger.ANY] },\n    { description: \"Full keyboard\", keyBoardRows: [0, 1, 2, 3], hand: Hand.ANY, fingers: [Finger.ANY] },\n  ],\n}\nconst Courses = { guidedCourse: GuidedCourse }\nexport default Courses\n","import CharacterSet from \"../../../core/CharacterSet\"\nimport { Language } from \"../../../core/Language\"\nimport { dictionary } from \"./english-dict.json\"\n\nconst characterSet = new CharacterSet([\n  // WHITESPACE\n  { code: [\"Tab\"], glyph: \"\\t\", type: \"WHITESPACE\", behavior: \"NONE\" },\n  { code: [\"Enter\"], glyph: \"\\n\", type: \"WHITESPACE\", behavior: \"NONE\" },\n  { code: [\"Space\"], glyph: \" \", type: \"WHITESPACE\", behavior: \"NONE\" },\n  // ALPHABET\n  { code: [\"KeyA\"], glyph: \"a\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyB\"], glyph: \"b\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyC\"], glyph: \"c\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyD\"], glyph: \"d\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyE\"], glyph: \"e\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyF\"], glyph: \"f\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyG\"], glyph: \"g\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyH\"], glyph: \"h\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyI\"], glyph: \"i\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyJ\"], glyph: \"j\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyK\"], glyph: \"k\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyL\"], glyph: \"l\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyM\"], glyph: \"m\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyN\"], glyph: \"n\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyO\"], glyph: \"o\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyP\"], glyph: \"p\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyQ\"], glyph: \"q\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyR\"], glyph: \"r\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyS\"], glyph: \"s\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyT\"], glyph: \"t\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyU\"], glyph: \"u\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyV\"], glyph: \"v\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyW\"], glyph: \"w\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyX\"], glyph: \"x\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyY\"], glyph: \"y\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n  { code: [\"KeyZ\"], glyph: \"z\", type: \"LOWERCASE_LETTER\", behavior: \"APPEND\" },\n\n  // DIGITS\n  { code: [\"Digit0\"], glyph: \"0\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit1\"], glyph: \"1\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit2\"], glyph: \"2\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit3\"], glyph: \"3\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit4\"], glyph: \"4\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit5\"], glyph: \"5\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit6\"], glyph: \"6\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit7\"], glyph: \"7\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit8\"], glyph: \"8\", type: \"NUMBER\", behavior: \"APPEND\" },\n  { code: [\"Digit9\"], glyph: \"9\", type: \"NUMBER\", behavior: \"APPEND\" },\n\n  // 'PUNCTUATION'\n  { code: [\"Comma\"], glyph: \",\", type: \"PUNCTUATION\", behavior: \"APPEND\" },\n  { code: [\"Period\"], glyph: \".\", type: \"PUNCTUATION\", behavior: \"APPEND\" },\n  { code: [\"Digit1\"], glyph: \"!\", type: \"PUNCTUATION\", behavior: \"APPEND\" },\n  { code: [\"Slash\"], glyph: \"?\", type: \"PUNCTUATION\", behavior: \"APPEND\" },\n  { code: [\"Semicolon\"], glyph: \";\", type: \"PUNCTUATION\", behavior: \"APPEND\" },\n  { code: [\"Semicolon\"], glyph: \":\", type: \"PUNCTUATION\", behavior: \"APPEND\" },\n  { code: [\"Quote\", \"KeyS\"], glyph: \"'s\", type: \"PUNCTUATION\", behavior: \"APPEND\" },\n  { code: [\"Quote\"], glyph: \"'\", type: \"PUNCTUATION\", behavior: \"SPLIT\" },\n  { code: [\"Minus\"], glyph: \"-\", type: \"PUNCTUATION\", behavior: \"SPLIT\" },\n  {\n    code: [\"Digit9\", \"Digit0\"],\n    glyph: \"(\",\n    bracketPair: \")\",\n    type: \"PUNCTUATION\",\n    behavior: \"BRACKET\",\n  },\n  { code: [\"Quote\"], glyph: \"'\", type: \"PUNCTUATION\", behavior: \"BRACKET\" },\n  { code: [\"Quote\"], glyph: '\"', type: \"PUNCTUATION\", behavior: \"BRACKET\" },\n  // SPECIALS\n  { code: [\"Digit2\"], glyph: \"@\", type: \"SPECIAL\", behavior: \"SPLIT\" },\n  { code: [\"Digit3\"], glyph: \"#\", type: \"SPECIAL\", behavior: \"PREPEND\" },\n  { code: [\"Digit4\"], glyph: \"$\", type: \"SPECIAL\", behavior: \"APPEND\" },\n  { code: [\"Digit5\"], glyph: \"%\", type: \"SPECIAL\", behavior: \"APPEND\" },\n  { code: [\"Digit6\"], glyph: \"^\", type: \"SPECIAL\", behavior: \"OPERATOR\" },\n  { code: [\"Digit7\"], glyph: \"&\", type: \"SPECIAL\", behavior: \"OPERATOR\" },\n  { code: [\"Digit8\"], glyph: \"*\", type: \"SPECIAL\", behavior: \"APPEND\" },\n  { code: [\"Slash\"], glyph: \"/\", type: \"SPECIAL\", behavior: \"SPLIT\" },\n  { code: [\"Backquote\"], glyph: \"~\", type: \"SPECIAL\", behavior: \"PREPEND\" },\n  { code: [\"Backquote\"], glyph: \"`\", type: \"SPECIAL\", behavior: \"BRACKET\" },\n  { code: [\"Backslash\"], glyph: \"\\\\\", type: \"SPECIAL\", behavior: \"PREPEND\" },\n  { code: [\"BracketLeft\", \"BracketRight\"], glyph: \"[\", bracketPair: \"]\", type: \"SPECIAL\", behavior: \"BRACKET\" },\n  { code: [\"BracketLeft\", \"BracketRight\"], glyph: \"{\", bracketPair: \"}\", type: \"SPECIAL\", behavior: \"BRACKET\" },\n  { code: [\"Comma\", \"Period\"], glyph: \"<\", bracketPair: \">\", type: \"SPECIAL\", behavior: \"BRACKET\" },\n  { code: [\"Minus\"], glyph: \"_\", type: \"SPECIAL\", behavior: \"SPLIT\" },\n  { code: [\"Equal\"], glyph: \"=\", type: \"SPECIAL\", behavior: \"OPERATOR\" },\n  { code: [\"Equal\"], glyph: \"+\", type: \"SPECIAL\", behavior: \"OPERATOR\" },\n  /* \n    /// PROGRAMMING CHARACTERS\n    { code: [\"Backquote\"], glyph: \"`\", type: PROGRAMMING, behavior: 'BRACKET' },\n    { code: [\"BracketLeft\", \"BracketRight\"], glyph: \"[\", bracketPair: \"]\", type: PROGRAMMING, behavior: 'BRACKET' },\n    { code: [\"BracketLeft\", \"BracketRight\"], glyph: \"{\", bracketPair: \"}\", type: PROGRAMMING, behavior: 'BRACKET' },\n    { code: [\"Slash\"], glyph: \"/\", type: PROGRAMMING, behavior: 'SPLIT' },\n    { code: [\"Backslash\"], glyph: \"\\\\\", type: PROGRAMMING, behavior: 'PREPEND' },\n    { code: [\"Comma\", \"Period\"], glyph: \"<\", bracketPair: \">\", type: PROGRAMMING, behavior: 'BRACKET' },\n    { code: [\"Minus\"], glyph: \"_\", type: PROGRAMMING, behavior: 'SPLIT' },\n    { code: [\"Minus\"], glyph: \"-\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Equal\"], glyph: \"+\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Digit8\"], glyph: \"*\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Equal\"], glyph: \"=\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Digit1\",\"Equal\"], glyph: \"!=\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Equal\"], glyph: \"==\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Equal\"], glyph: \"++\", type: PROGRAMMING, behavior: 'PREPEND'_OR_'APPEND' },\n    { code: [\"Comma\",\"Period\"], glyph: \"<=\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Comma\",\"Period\"], glyph: \">=\", type: PROGRAMMING, behavior: 'OPERATOR' },\n    { code: [\"Digit5\"], glyph: \"%\", type: PROGRAMMING, behavior: 'OPERATOR' } */\n])\n\nconst vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"] // TODO switch to KeyCode[]\n\nconst English = new Language(characterSet, vowels, dictionary)\n\nexport default English\n","import CharacterSet, { Character } from \"./CharacterSet\"\nimport { KeyCode } from \"./KeyCode\"\n\nexport class Language {\n  characterSet: CharacterSet\n  vowels: string[]\n  dictionary: string[]\n  characters: Character[]\n  alphabet: string[]\n  numbers: string[]\n  punctuation: string[]\n  specials: string[]\n  alphaMap: {[ch: string]: true}\n  uniqueGlyphs: string[]\n  uniqueKeyCodes: KeyCode[]\n  // TODO terminators: Character[]\n  constructor(characterSet: CharacterSet, vowels: string[], dictionary: string[]) {\n    this.dictionary = dictionary\n    this.characterSet = characterSet\n    this.vowels = vowels\n    this.characters = this.characterSet.characters\n    this.uniqueGlyphs = CharacterSet.uniqueGlyphs(this.characters)\n    this.uniqueKeyCodes = this.characterSet.uniqueKeyCodes()\n    this.alphabet = this.characterSet.letterSet.map(({glyph}) => glyph)\n    this.numbers = this.characterSet.numberSet.map(({glyph}) => glyph)\n    this.punctuation = this.characterSet.punctSet.map(({glyph}) => glyph)\n    this.specials = this.characterSet.specialSet.map(({glyph}) => glyph)\n    this.alphaMap = {}\n    this.alphabet.forEach(ch => {\n      this.alphaMap[ch] = true\n      this.alphaMap[ch.toUpperCase()] = true\n    })\n    // TODO this.terminators = \n  }\n}\n","import Keyboard, { KeyCapLabelMap } from \"../../core/Keyboard\"\n\n\n\nconst keyCapLabelMap: KeyCapLabelMap = {\n  NONE: { main: \"\" },\n  Backquote: { main: \"`\", shift: \"~\" },\n  Digit1: { main: \"1\", shift: \"!\" },\n  Digit2: { main: \"2\", shift: \"@\" },\n  Digit3: { main: \"3\", shift: \"#\" },\n  Digit4: { main: \"4\", shift: \"$\" },\n  Digit5: { main: \"5\", shift: \"%\" },\n  Digit6: { main: \"6\", shift: \"^\" },\n  Digit7: { main: \"7\", shift: \"&\" },\n  Digit8: { main: \"8\", shift: \"*\" },\n  Digit9: { main: \"9\", shift: \"(\" },\n  Digit0: { main: \"0\", shift: \")\" },\n  Minus: { main: \"-\", shift: \"_\" },\n  Equal: { main: \"=\", shift: \"+\" },\n  Backspace: { main: \"Backspace\" },\n  Tab: { main: \"Tab\" },\n  KeyQ: { main: \"q\", shift: \"Q\" },\n  KeyW: { main: \"w\", shift: \"W\" },\n  KeyE: { main: \"e\", shift: \"E\" },\n  KeyR: { main: \"r\", shift: \"R\" },\n  KeyT: { main: \"t\", shift: \"T\" },\n  KeyY: { main: \"y\", shift: \"Y\" },\n  KeyU: { main: \"u\", shift: \"U\" },\n  KeyI: { main: \"i\", shift: \"I\" },\n  KeyO: { main: \"o\", shift: \"O\" },\n  KeyP: { main: \"p\", shift: \"P\" },\n  BracketLeft: { main: \"[\", shift: \"{\" },\n  BracketRight: { main: \"]\", shift: \"}\" },\n  Backslash: { main: \"\\\\\", shift: \"|\" },\n  CapsLock: { main: \"CapsLock\" },\n  KeyA: { main: \"a\", shift: \"A\" },\n  KeyS: { main: \"s\", shift: \"S\" },\n  KeyD: { main: \"d\", shift: \"D\" },\n  KeyF: { main: \"f\", shift: \"F\" },\n  KeyG: { main: \"g\", shift: \"G\" },\n  KeyH: { main: \"h\", shift: \"H\" },\n  KeyJ: { main: \"j\", shift: \"J\" },\n  KeyK: { main: \"k\", shift: \"K\" },\n  KeyL: { main: \"l\", shift: \"L\" },\n  Semicolon: { main: \";\", shift: \":\" },\n  Quote: { main: \"'\", shift: '\"' },\n  Enter: { main: \"Enter\" },\n  ShiftLeft: { main: \"Shift\" },\n  KeyZ: { main: \"z\", shift: \"Z\" },\n  KeyX: { main: \"x\", shift: \"X\" },\n  KeyC: { main: \"c\", shift: \"C\" },\n  KeyV: { main: \"v\", shift: \"V\" },\n  KeyB: { main: \"b\", shift: \"B\" },\n  KeyN: { main: \"n\", shift: \"N\" },\n  KeyM: { main: \"m\", shift: \"M\" },\n  Comma: { main: \",\", shift: \"<\" },\n  Period: { main: \".\", shift: \">\" },\n  Slash: { main: \"/\", shift: \"?\" },\n  ShiftRight: { main: \"Shift\" },\n  ControlLeft: { main: \"Ctrl\" },\n  AltLeft: { main: \"Alt\" },\n  Space: { main: \"\" },\n  AltRight: { main: \"Alt\" },\n  ControlRight: { main: \"Ctrl\" }\n}\n\nconst EnglishQwertyLayout = new Keyboard(keyCapLabelMap)\n\nexport default EnglishQwertyLayout","import Keyboard from \"../core/Keyboard\"\nimport { Language } from \"../core/Language\"\nimport { PracticeModeStringGenerator, TrainingStringGenerator } from \"../core/TrainingStringGenerator/TrainingStringGenerator\"\nimport TrainingText from \"../core/TrainingText\"\nimport { CSSCustomProperties } from \"./Contexts/ThemeContext/css\"\nimport { themes } from \"./Contexts/ThemeContext/ThemeContext\"\n\nimport Courses, { Course } from \"../assets/courses/Courses\"\nimport English from \"../assets/languages/english/English\"\nimport qwerty from \"../assets/keyboard_layouts/en_qwerty\"\nimport state_and_revolution from \"../assets/texts/state_and_revolution\"\n\nexport const FontSizes = [\"1rem\", \"1.5rem\", \"3rem\"]\nexport type MachineState = \"INIT\" | \"LOADED\" | \"READY\" | \"PAUSED\" | \"TRAINING\" | \"SETTINGS\"\n\nexport enum TrainingMode {\n  GUIDED = \"Guided\",\n  PRACTICE = \"Practice\",\n  CODE = \"Code\",\n}\nconst defaultLayout = qwerty\nconst defaultLanguage = English\nconst defaultText = new TrainingText(state_and_revolution, English)\nconst defaultMode = TrainingMode.GUIDED\nconst defaultGenerator = new PracticeModeStringGenerator(defaultLanguage, defaultText.text)\nconst defaultCourse = Courses.guidedCourse\nconst defaultCodeSourceText = String.raw`export class CodeModeStringGenerator implements TrainingStringGenerator {\n  private _cursor: number\n  private _code: string\n  constructor(_code: string) {\n    this._code = sanitizeCode(_code)\n    this._cursor = 0\n  }\n  generate(options: any = { codeLines: 4 }): string {\n    const lines: string[] = []\n    const newLineAt = (idx: number) => this._code[idx] === \"\\n\"\n\n    let cursor = this._cursor\n    let start,\n      end = 0\n    for (let i = 0; i < options.codeLines; i++) {\n      start = cursor\n      end = this._code.indexOf(\"\\n\", start) + 1\n      if (end <= 0) end = this._code.length\n      const line = this._code.slice(start, end)\n      lines.push(line)\n      cursor = end\n      if (cursor >= this._code.length) break\n    }\n    this._cursor = cursor\n    return lines.join(\"\")\n  }\n}`\n\n\nexport enum CodeLanguage {\n  \"JS\" = \"JavaScript\",\n  \"TS\" = \"TypeScript\",\n  \"C\" = \"C\",\n  \"Bash\" = \"Bash\",\n  \"Python\" = \"Python\",\n}\n\nexport interface State {\n  machineState: MachineState\n  currentUserPressedKeys: Set<string>\n  trainingStringGenerator: TrainingStringGenerator\n  trainingString: string\n  cursor: number\n  mistakeCharIndices: Set<number>\n  wordsPerMinute: number\n  successRate: number\n  totalSessions: number\n  wordsPerMinuteAverage: number\n  successRateAverage: number\n  uiModeSelectShow: boolean\n  uiSettingsModalShow: boolean\n  uiShowWhiteSpaceSymbols: boolean\n  uiTheme: { [index: string]: CSSCustomProperties }\n\n  language: Language\n  keyboard: Keyboard\n  trainingMode: TrainingMode\n  trainingStringFontSize: number\n\n  guidedCourse: Course\n  guidedLevelIndex: number\n  guidedWordLength: {min: number, max: number}\n  guidedNumWords: number\n  guidedHasCaps: boolean\n  guidedHasPunctuation: boolean\n  guidedHasNumbers: boolean\n  guidedHasSpecials: boolean\n  guidedLikelihoodModified: number\n\n  practiceSourceText: string\n\n  codeSourceText: string\n  codeLines: number\n}\n\nexport const defaultState: State = {\n  machineState: \"INIT\",\n  language: defaultLanguage,\n  keyboard: defaultLayout,\n  trainingMode: defaultMode,\n  trainingStringGenerator: defaultGenerator,\n  currentUserPressedKeys: new Set(),\n  trainingString: \"\",\n  cursor: 0,\n  mistakeCharIndices: new Set(),\n  wordsPerMinute: 0,\n  successRate: 0,\n  totalSessions: 0,\n  wordsPerMinuteAverage: 0,\n  successRateAverage: 0,\n  \n  uiModeSelectShow: false,\n  uiSettingsModalShow: false,\n  uiShowWhiteSpaceSymbols: true,\n  \n  uiTheme: themes.dark,\n  trainingStringFontSize: 1,\n  \n  guidedCourse: defaultCourse,\n  guidedLevelIndex: 0,\n  guidedWordLength: {min:5, max: 12},\n  guidedNumWords: 20,\n  guidedHasCaps: false,\n  guidedHasPunctuation: false,\n  guidedHasNumbers: false,\n  guidedHasSpecials: false,\n  guidedLikelihoodModified: 0.8,\n\n  practiceSourceText: defaultText.text,\n\n  codeSourceText: defaultCodeSourceText,\n  codeLines: 4,\n}\n\nexport const inactivityDelay = 2000 //todo: mettre dans settings\n\nexport default defaultState\n","const text = `1. The State: A Product of the Irreconcilability of Class Antagonisms\n\nWhat is now happening to Marx’s theory has, in the course of history, happened repeatedly to the theories of revolutionary thinkers and leaders of oppressed classes fighting for emancipation. During the lifetime of great revolutionaries, the oppressing classes constantly hounded them, received their theories with the most savage malice, the most furious hatred and the most unscrupulous campaigns of lies and slander. After their death, attempts are made to convert them into harmless icons, to canonize them, so to say, and to hallow their names to a certain extent for the “consolation” of the oppressed classes and with the object of duping the latter, while at the same time robbing the revolutionary theory of its substance, blunting its revolutionary edge and vulgarizing it. Today, the bourgeoisie and the opportunists within the labor movement concur in this doctoring of Marxism. They omit, obscure, or distort the revolutionary side of this theory, its revolutionary soul. They push to the foreground and extol what is or seems acceptable to the bourgeoisie. All the social-chauvinists are now “Marxists” (don’t laugh!). And more and more frequently German bourgeois scholars, only yesterday specialists in the annihilation of Marxism, are speaking of the “national-German” Marx, who, they claim, educated the labor unions which are so splendidly organized for the purpose of waging a predatory war!\n\nIn these circumstances, in view of the unprecedently wide-spread distortion of Marxism, our prime task is to re-establish what Marx really taught on the subject of the state. This will necessitate a number of long quotations from the works of Marx and Engels themselves. Of course, long quotations will render the text cumbersome and not help at all to make it popular reading, but we cannot possibly dispense with them. All, or at any rate all the most essential passages in the works of Marx and Engels on the subject of the state must by all means be quoted as fully as possible so that the reader may form an independent opinion of the totality of the views of the founders of scientific socialism, and of the evolution of those views, and so that their distortion by the “Kautskyism” now prevailing may be documentarily proved and clearly demonstrated.\n\nLet us begin with the most popular of Engels’ works, The Origin of the Family, Private Property and the State, the sixth edition of which was published in Stuttgart as far back as 1894. We have to translate the quotations from the German originals, as the Russian translations, while very numerous, are for the most part either incomplete or very unsatisfactory.\n\nSumming up his historical analysis, Engels says:\n\n“The state is, therefore, by no means a power forced on society from without; just as little is it ’the reality of the ethical idea’, ’the image and reality of reason’, as Hegel maintains. Rather, it is a product of society at a certain stage of development; it is the admission that this society has become entangled in an insoluble contradiction with itself, that it has split into irreconcilable antagonisms which it is powerless to dispel. But in order that these antagonisms, these classes with conflicting economic interests, might not consume themselves and society in fruitless struggle, it became necessary to have a power, seemingly standing above society, that would alleviate the conflict and keep it within the bounds of ’order’; and this power, arisen out of society but placing itself above it, and alienating itself more and more from it, is the state.” (Pp.177-78, sixth edition)[1]\n\nThis expresses with perfect clarity the basic idea of Marxism with regard to the historical role and the meaning of the state. The state is a product and a manifestation of the irreconcilability of class antagonisms. The state arises where, when and insofar as class antagonism objectively cannot be reconciled. And, conversely, the existence of the state proves that the class antagonisms are irreconcilable.\n\nIt is on this most important and fundamental point that the distortion of Marxism, proceeding along two main lines, begins.\n\nOn the one hand, the bourgeois, and particularly the petty-bourgeois, ideologists, compelled under the weight of indisputable historical facts to admit that the state only exists where there are class antagonisms and a class struggle, “correct” Marx in such a way as to make it appear that the state is an organ for the reconciliation of classes. According to Marx, the state could neither have arisen nor maintained itself had it been possible to reconcile classes. From what the petty-bourgeois and philistine professors and publicists say, with quite frequent and benevolent references to Marx, it appears that the state does reconcile classes. According to Marx, the state is an organ of class rule, an organ for the oppression of one class by another; it is the creation of “order”, which legalizes and perpetuates this oppression by moderating the conflict between classes. In the opinion of the petty-bourgeois politicians, however, order means the reconciliation of classes, and not the oppression of one class by another; to alleviate the conflict means reconciling classes and not depriving the oppressed classes of definite means and methods of struggle to overthrow the oppressors.\n\nFor instance, when, in the revolution of 1917, the question of the significance and role of the state arose in all its magnitude as a practical question demanding immediate action, and, moreover, action on a mass scale, all the Social-Revolutionaries and Mensheviks descended at once to the petty-bourgeois theory that the “state” “reconciles” classes. Innumerable resolutions and articles by politicians of both these parties are thoroughly saturated with this petty-bourgeois and philistine “reconciliation” theory. That the state is an organ of the rule of a definite class which cannot be reconciled with its antipode (the class opposite to it) is something the petty-bourgeois democrats will never be able to understand. Their attitude to the state is one of the most striking manifestations of the fact that our Socialist-Revolutionaries and Mensheviks are not socialists at all (a point that we Bolsheviks have always maintained), but petty-bourgeois democrats using near-socialist phraseology.\n\nOn the other hand, the “Kautskyite” distortion of Marxism is far more subtle. “Theoretically”, it is not denied that the state is an organ of class rule, or that class antagonisms are irreconcilable. But what is overlooked or glossed over is this: if the state is the product of the irreconcilability of class antagonisms, if it is a power standing above society and “alienating itself more and more from it”, it is clear that the liberation of the oppressed class is impossible not only without a violent revolution, but also without the destruction of the apparatus of state power which was created by the ruling class and which is the embodiment of this “alienation”. As we shall see later, Marx very explicitly drew this theoretically self-evident conclusion on the strength of a concrete historical analysis of the tasks of the revolution. And — as we shall show in detail further on — it is this conclusion which Kautsky has “forgotten” and distorted.\n2. Special Bodies of Armed Men, Prisons, etc.\n\nEngels continues:\n\n“As distinct from the old gentile [tribal or clan] order,[2] the state, first, divides its subjects according to territory....”\n\nThis division seems “natural” to us, but it costs a prolonged struggle against the old organization according to generations or tribes.\n\n“The second distinguishing feature is the establishment of a public power which no longer directly coincides with the population organizing itself as an armed force. This special, public power is necessary because a self-acting armed organization of the population has become impossible since the split into classes.... This public power exists in every state; it consists not merely of armed men but also of material adjuncts, prisons, and institutions of coercion of all kinds, of which gentile [clan] society knew nothing....\"\n\nEngels elucidates the concept of the “power” which is called the state, a power which arose from society but places itself above it and alienates itself more and more from it. What does this power mainly consist of? It consists of special bodies of armed men having prisons, etc., at their command.\n\nWe are justified in speaking of special bodies of armed men, because the public power which is an attribute of every state “does not directly coincide” with the armed population, with its “self-acting armed organization\".\n\nLike all great revolutionary thinkers, Engels tries to draw the attention of the class-conscious workers to what prevailing philistinism regards as least worthy of attention, as the most habitual thing, hallowed by prejudices that are not only deep-rooted but, one might say, petrified. A standing army and police are the chief instruments of state power. But how can it be otherwise?\n\nFrom the viewpoint of the vast majority of Europeans of the end of the 19th century, whom Engels was addressing, and who had not gone through or closely observed a single great revolution, it could not have been otherwise. They could not understand at all what a “self-acting armed organization of the population” was. When asked why it became necessary to have special bodies of armed men placed above society and alienating themselves from it (police and a standing army), the West-European and Russian philistines are inclined to utter a few phrases borrowed from Spencer or Mikhailovsky, to refer to the growing complexity of social life, the differentiation of functions, and so on.\n\nSuch a reference seems “scientific”, and effectively lulls the ordinary person to sleep by obscuring the important and basic fact, namely, the split of society into irreconcilable antagonistic classes.\n\nWere it not for this split, the “self-acting armed organization of the population” would differ from the primitive organization of a stick-wielding herd of monkeys, or of primitive men, or of men united in clans, by its complexity, its high technical level, and so on. But such an organization would still be possible.\n\nIt is impossible because civilized society is split into antagonistic, and, moreover, irreconcilably antagonistic classes, whose “self-acting” arming would lead to an armed struggle between them. A state arises, a special power is created, special bodies of armed men, and every revolution, by destroying the state apparatus, shows us the naked class struggle, clearly shows us how the ruling class strives to restore the special bodies of armed men which serve it, and how the oppressed class strives to create a new organization of this kind, capable of serving the exploited instead of the exploiters.\n\nIn the above argument, Engels raises theoretically the very same question which every great revolution raises before us in practice, palpably and, what is more, on a scale of mass action, namely, the question of the relationship between “special” bodies of armed men and the “self-acting armed organization of the population\". We shall see how this question is specifically illustrated by the experience of the European and Russian revolutions.\n\nBut to return to Engels’ exposition.\n\nHe points out that sometimes — in certain parts of North America, for example — this public power is weak (he has in mind a rare exception in capitalist society, and those parts of North America in its pre-imperialist days where the free colonists predominated), but that, generally speaking, it grows stronger:\n\n“It [the public power] grows stronger, however, in proportion as class antagonisms within the state become more acute, and as adjacent states become larger and more populous. We have only to look at our present-day Europe, where class struggle and rivalry in conquest have tuned up the public power to such a pitch that it threatens to swallow the whole of society and even the state.\"\n\nThis was written not later than the early nineties of the last century, Engels’ last preface being dated June 16, 1891. The turn towards imperialism — meaning the complete domination of the trusts, the omnipotence of the big banks, a grand-scale colonial policy, and so forth — was only just beginning in France, and was even weaker in North America and in Germany. Since then “rivalry in conquest” has taken a gigantic stride, all the more because by the beginning of the second decade of the 20th century the world had been completely divided up among these “rivals in conquest”, i.e., among the predatory Great Powers. Since then, military and naval armaments have grown fantastically and the predatory war of 1914-17 for the domination of the world by Britain or Germany, for the division of the spoils, has brought the “swallowing” of all the forces of society by the rapacious state power close to complete catastrophe.\n\nEngels’ could, as early as 1891, point to “rivalry in conquest” as one of the most important distinguishing features of the foreign policy of the Great Powers, while the social-chauvinist scoundrels have ever since 1914, when this rivalry, many time intensified, gave rise to an imperialist war, been covering up the defence of the predatory interests of “their own” bourgeoisie with phrases about “defence of the fatherland”, “defence of the republic and the revolution”, etc.!\n3. The State: an Instrument for the Exploitation of the Oppressed Class\n\nThe maintenance of the special public power standing above society requires taxes and state loans.\n\n“Having public power and the right to levy taxes,” Engels writes, “the officials now stand, as organs of society, above society. The free, voluntary respect that was accorded to the organs of the gentile [clan] constitution does not satisfy them, even if they could gain it....” Special laws are enacted proclaiming the sanctity and immunity of the officials. “The shabbiest police servant” has more “authority” than the representative of the clan, but even the head of the military power of a civilized state may well envy the elder of a clan the “unrestrained respect” of society.\n\nThe question of the privileged position of the officials as organs of state power is raised here. The main point indicated is: what is it that places them above society? We shall see how this theoretical question was answered in practice by the Paris Commune in 1871 and how it was obscured from a reactionary standpoint by Kautsky in 1912.\n\n“Because the state arose from the need to hold class antagonisms in check, but because it arose, at the same time, in the midst of the conflict of these classes, it is, as a rule, the state of the most powerful, economically dominant class, which, through the medium of the state, becomes also the politically dominant class, and thus acquires new means of holding down and exploiting the oppressed class....” The ancient and feudal states were organs for the exploitation of the slaves and serfs; likewise, “the modern representative state is an instrument of exploitation of wage-labor by capital. By way of exception, however, periods occur in which the warring classes balance each other so nearly that the state power as ostensible mediator acquires, for the moment, a certain degree of independence of both....” Such were the absolute monarchies of the 17th and 18th centuries, the Bonapartism of the First and Second Empires in France, and the Bismarck regime in Germany.\n\nSuch, we may add, is the Kerensky government in republican Russia since it began to persecute the revolutionary proletariat, at a moment when, owing to the leadership of the petty-bourgeois democrats, the Soviets have already become impotent, while the bourgeoisie are not yet strong enough simply to disperse them.\n\nIn a democratic republic, Engels continues, “wealth exercises its power indirectly, but all the more surely”, first, by means of the “direct corruption of officials” (America); secondly, by means of an “alliance of the government and the Stock Exchange” (France and America).\n\nAt present, imperialism and the domination of the banks have “developed” into an exceptional art both these methods of upholding and giving effect to the omnipotence of wealth in democratic republics of all descriptions. Since, for instance, in the very first months of the Russian democratic republic, one might say during the honeymoon of the “socialist” S.R.s and Mensheviks joined in wedlock to the bourgeoisie, in the coalition government. Mr. Palchinsky obstructed every measure intended for curbing the capitalists and their marauding practices, their plundering of the state by means of war contracts; and since later on Mr. Palchinsky, upon resigning from the Cabinet (and being, of course, replaced by another quite similar Palchinsky), was “rewarded” by the capitalists with a lucrative job with a salary of 120,000 rubles per annum — what would you call that? Direct or indirect bribery? An alliance of the government and the syndicates, or “merely” friendly relations? What role do the Chernovs, Tseretelis, Avksentyevs and Skobelevs play? Are they the “direct” or only the indirect allies of the millionaire treasury-looters?\n\nAnother reason why the omnipotence of “wealth” is more certain in a democratic republic is that it does not depend on defects in the political machinery or on the faulty political shell of capitalism. A democratic republic is the best possible political shell for capitalism, and, therefore, once capital has gained possession of this very best shell (through the Palchinskys, Chernovs, Tseretelis and Co.), it establishes its power so securely, so firmly, that no change of persons, institutions or parties in the bourgeois-democratic republic can shake it.\n\nWe must also note that Engels is most explicit in calling universal suffrage as well an instrument of bourgeois rule. Universal suffrage, he says, obviously taking account of the long experience of German Social-Democracy, is\n\n“the gauge of the maturity of the working class. It cannot and never will be anything more in the present-day state.\"\n\nThe petty-bourgeois democrats, such as our Socialist-Revolutionaries and Mensheviks, and also their twin brothers, all the social-chauvinists and opportunists of Western Europe, expect just this “more” from universal suffrage. They themselves share, and instil into the minds of the people, the false notion that universal suffrage “in the present-day state” is really capable of revealing the will of the majority of the working people and of securing its realization.\n\nHere, we can only indicate this false notion, only point out that Engels’ perfectly clear statement is distorted at every step in the propaganda and agitation of the “official” (i.e., opportunist) socialist parties. A detailed exposure of the utter falsity of this notion which Engels brushes aside here is given in our further account of the views of Marx and Engels on the “present-day” state.\n\nEngels gives a general summary of his views in the most popular of his works in the following words:\n\n“The state, then, has not existed from all eternity. There have been societies that did without it, that had no idea of the state and state power. At a certain stage of economic development, which was necessarily bound up with the split of society into classes, the state became a necessity owing to this split. We are now rapidly approaching a stage in the development of production at which the existence of these classes not only will have ceased to be a necessity, but will become a positive hindrance to production. They will fall as they arose at an earlier stage. Along with them the state will inevitably fall. Society, which will reorganize production on the basis of a free and equal association of the producers, will put the whole machinery of state where it will then belong: into a museum of antiquities, by the side of the spinning-wheel and the bronze axe.\"\n\nWe do not often come across this passage in the propaganda and agitation literature of the present-day Social-Democrats. Even when we do come across it, it is mostly quoted in the same manner as one bows before an icon, i.e., it is done to show official respect for Engels, and no attempt is made to gauge the breadth and depth of the revolution that this relegating of “the whole machinery of state to a museum of antiquities” implies. In most cases we do not even find an understanding of what Engels calls the state machine.\n4. The “Withering Away” of the State, and Violent Revolution\n\nEngels’ words regarding the “withering away” of the state are so widely known, they are often quoted, and so clearly reveal the essence of the customary adaptation of Marxism to opportunism that we must deal with them in detail. We shall quote the whole argument from which they are taken.\n\n“The proletariat seizes from state power and turns the means of production into state property to begin with. But thereby it abolishes itself as the proletariat, abolishes all class distinctions and class antagonisms, and abolishes also the state as state. Society thus far, operating amid class antagonisms, needed the state, that is, an organization of the particular exploiting class, for the maintenance of its external conditions of production, and, therefore, especially, for the purpose of forcibly keeping the exploited class in the conditions of oppression determined by the given mode of production (slavery, serfdom or bondage, wage-labor). The state was the official representative of society as a whole, its concentration in a visible corporation. But it was this only insofar as it was the state of that class which itself represented, for its own time, society as a whole: in ancient times, the state of slave-owning citizens; in the Middle Ages, of the feudal nobility; in our own time, of the bourgeoisie. When at last it becomes the real representative of the whole of society, it renders itself unnecessary. As soon as there is no longer any social class to be held in subjection, as soon as class rule, and the individual struggle for existence based upon the present anarchy in production, with the collisions and excesses arising from this struggle, are removed, nothing more remains to be held in subjection — nothing necessitating a special coercive force, a state. The first act by which the state really comes forward as the representative of the whole of society — the taking possession of the means of production in the name of society — is also its last independent act as a state. State interference in social relations becomes, in one domain after another, superfluous, and then dies down of itself. The government of persons is replaced by the administration of things, and by the conduct of processes of production. The state is not ’abolished’. It withers away. This gives the measure of the value of the phrase ’a free people’s state’, both as to its justifiable use for a long time from an agitational point of view, and as to its ultimate scientific insufficiency; and also of the so-called anarchists’ demand that the state be abolished overnight.\" (Herr Eugen Duhring’s Revolution in Science [Anti-Duhring], pp.301-03, third German edition.)[3]\n\nIt is safe to say that of this argument of Engels’, which is so remarkably rich in ideas, only one point has become an integral part of socialist thought among modern socialist parties, namely, that according to Marx that state “withers away” — as distinct from the anarchist doctrine of the “abolition” of the state. To prune Marxism to such an extent means reducing it to opportunism, for this “interpretation” only leaves a vague notion of a slow, even, gradual change, of absence of leaps and storms, of absence of revolution. The current, widespread, popular, if one may say so, conception of the “withering away” of the state undoubtedly means obscuring, if not repudiating, revolution.\n\nSuch an “interpretation”, however, is the crudest distortion of Marxism, advantageous only to the bourgeoisie. In point of theory, it is based on disregard for the most important circumstances and considerations indicated in, say, Engels’ “summary” argument we have just quoted in full.\n\nIn the first place, at the very outset of his argument, Engels says that, in seizing state power, the proletariat thereby “abolishes the state as state\". It is not done to ponder over the meaning of this. Generally, it is either ignored altogether, or is considered to be something in the nature of “Hegelian weakness” on Engels’ part. As a matter of fact, however, these words briefly express the experience of one of the greatest proletarian revolutions, the Paris Commune of 1871, of which we shall speak in greater detail in its proper place. As a matter of fact, Engels speaks here of the proletariat revolution “abolishing” the bourgeois state, while the words about the state withering away refer to the remnants of the proletarian state after the socialist revolution. According to Engels, the bourgeois state does not “wither away”, but is “abolished” by the proletariat in the course of the revolution. What withers away after this revolution is the proletarian state or semi-state.\n\nSecondly, the state is a “special coercive force\". Engels gives this splendid and extremely profound definition here with the utmost lucidity. And from it follows that the “special coercive force” for the suppression of the proletariat by the bourgeoisie, of millions of working people by handfuls of the rich, must be replaced by a “special coercive force” for the suppression of the bourgeoisie by the proletariat (the dictatorship of the proletariat). This is precisely what is meant by “abolition of the state as state\". This is precisely the “act” of taking possession of the means of production in the name of society. And it is self-evident that such a replacement of one (bourgeois) “special force” by another (proletarian) “special force” cannot possibly take place in the form of “withering away\".\n\nThirdly, in speaking of the state “withering away”, and the even more graphic and colorful “dying down of itself”, Engels refers quite clearly and definitely to the period after “the state has taken possession of the means of production in the name of the whole of society”, that is, after the socialist revolution. We all know that the political form of the “state” at that time is the most complete democracy. But it never enters the head of any of the opportunists, who shamelessly distort Marxism, that Engels is consequently speaking here of democracy “dying down of itself”, or “withering away\". This seems very strange at first sight. But it is “incomprehensible” only to those who have not thought about democracy also being a state and, consequently, also disappearing when the state disappears. Revolution alone can “abolish” the bourgeois state. The state in general, i.e., the most complete democracy, can only “wither away\".\n\nFourthly, after formulating his famous proposition that “the state withers away”, Engels at once explains specifically that this proposition is directed against both the opportunists and the anarchists. In doing this, Engels puts in the forefront that conclusion, drawn from the proposition that “the state withers away”, which is directed against the opportunists.\n\nOne can wager that out of every 10,000 persons who have read or heard about the “withering away” of the state, 9,990 are completely unaware, or do not remember, that Engels directed his conclusions from that proposition not against anarchists alone. And of the remaining 10, probably nine do not know the meaning of a “free people’s state” or why an attack on this slogan means an attack on opportunists. This is how history is written! This is how a great revolutionary teaching is imperceptibly falsified and adapted to prevailing philistinism. The conclusion directed against the anarchists has been repeated thousands of times; it has been vulgarized, and rammed into people’s heads in the shallowest form, and has acquired the strength of a prejudice, whereas the conclusion directed against the opportunists has been obscured and “forgotten”!\n\nThe “free people’s state” was a programme demand and a catchword current among the German Social-Democrats in the seventies. This catchword is devoid of all political content except that it describes the concept of democracy in a pompous philistine fashion. Insofar as it hinted in a legally permissible manner at a democratic republic, Engels was prepared to “justify” its use “for a time” from an agitational point of view. But it was an opportunist catchword, for it amounted to nothing more than prettifying bourgeois democracy, and was also a failure to understand the socialist criticism of the state in general. We are in favor of a democratic republic as the best form of state for the proletariat under capitalism. But we have no right to forget that wage slavery is the lot of the people even in the most democratic bourgeois republic. Furthermore, every state is a “special force” for the suppression of the oppressed class. Consequently, every state is not “free” and not a “people’s state\". Marx and Engels explained this repeatedly to their party comrades in the seventies.\n\nFifthly, the same work of Engels’, whose arguments about the withering away of the state everyone remembers, also contains an argument of the significance of violent revolution. Engels’ historical analysis of its role becomes a veritable panegyric on violent revolution. This, “no one remembers\". It is not done in modern socialist parties to talk or even think about the significance of this idea, and it plays no part whatever in their daily propaganda and agitation among the people. And yet it is inseparably bound up with the ”withering away” of the state into one harmonious whole.\n\nHere is Engels’ argument:\n\n“...That force, however, plays yet another role [other than that of a diabolical power] in history, a revolutionary role; that, in the words of Marx, it is the midwife of every old society which is pregnant with a new one, that it is the instrument with which social movement forces its way through and shatters the dead, fossilized political forms — of this there is not a word in Herr Duhring. It is only with sighs and groans that he admits the possibility that force will perhaps be necessary for the overthrow of an economy based on exploitation — unfortunately, because all use of force demoralizes, he says, the person who uses it. And this in Germany, where a violent collision — which may, after all, be forced on the people — would at least have the advantage of wiping out the servility which has penetrated the nation’s mentality following the humiliation of the Thirty Years’ War.[4] And this person’s mode of thought — dull, insipid, and impotent — presumes to impose itself on the most revolutionary party that history has ever known! (p.193, third German edition, Part II, end of Chap.IV)\n\nHow can this panegyric on violent revolution, which Engels insistently brought to the attention of the German Social-Democrats between 1878 and 1894, i.e., right up to the time of his death, be combined with the theory of the “withering away” of the state to form a single theory?\n\nUsually the two are combined by means of eclecticism, by an unprincipled or sophistic selection made arbitrarily (or to please the powers that be) of first one, then another argument, and in 99 cases out of 100, if not more, it is the idea of the “withering away” that is placed in the forefront. Dialectics are replaced by eclecticism — this is the most usual, the most wide-spread practice to be met with in present-day official Social-Democratic literature in relation to Marxism. This sort of substitution is, of course, nothing new; it was observed even in the history of classical Greek philosophy. In falsifying Marxism in opportunist fashion, the substitution of eclecticism for dialectics is the easiest way of deceiving the people. It gives an illusory satisfaction; it seems to take into account all sides of the process, all trends of development, all the conflicting influences, and so forth, whereas in reality it provides no integral and revolutionary conception of the process of social development at all.\n\nWe have already said above, and shall show more fully later, that the theory of Marx and Engels of the inevitability of a violent revolution refers to the bourgeois state. The latter cannot be superseded by the proletarian state (the dictatorship of the proletariat) through the process of ”withering away”, but, as a general rule, only through a violent revolution. The panegyric Engels sang in its honor, and which fully corresponds to Marx’s repeated statements (see the concluding passages of The Poverty of Philosophy[5] and the Communist Manifesto,[6] with their proud and open proclamation of the inevitability of a violent revolution; see what Marx wrote nearly 30 years later, in criticizing the Gotha Programme of 1875,[7] when he mercilessly castigated the opportunist character of that programme) — this panegyric is by no means a mere “impulse”, a mere declamation or a polemical sally. The necessity of systematically imbuing the masses with this and precisely this view of violent revolution lies at the root of the entire theory of Marx and Engels. The betrayal of their theory by the now prevailing social-chauvinist and Kautskyite trends expresses itself strikingly in both these trends ignoring such propaganda and agitation.\n\nThe supersession of the bourgeois state by the proletarian state is impossible without a violent revolution. The abolition of the proletarian state, i.e., of the state in general, is impossible except through the process of “withering away\".\n\nA detailed and concrete elaboration of these views was given by Marx and Engels when they studied each particular revolutionary situation, when they analyzed the lessons of the experience of each particular revolution. We shall now pass to this, undoubtedly the most important, part of their theory. `\n\nexport default text","import React from 'react'\nimport { TrainingMode } from '../defaultState'\nimport './FormattedText.css'\n\nconst testId = \"formattedString\"\ninterface MyProps { greyed: boolean, cursor: number, trainingString: string, mistakeCharIndices: Set<number>, mode: TrainingMode, uiShowWhiteSpaceSymbols: boolean }\n\nexport const FormattedText: React.FC<MyProps> = (props: MyProps): JSX.Element => {\n  const { cursor, trainingString, mistakeCharIndices } = props\n\n  let uniquekey = 0\n  function replaceWhiteSpacesWithSymbols(str: string): string {\n    const tab = `&emsp;&RightArrowBar;`\n    const lineFeed = `&crarr;<br>`\n    const blankAndInvisibleSpace = `&blank;&#8203;`\n    return str.replace(/\\t/g, tab).replace(/\\n/g, lineFeed).replace(/\\s/g, blankAndInvisibleSpace)\n  }\n  function replaceWhiteSpacesWithHTML(str: string): string {\n    const tab = `&emsp;&emsp;`\n    const lineFeed = `&emsp;<br>`\n    const space = `&emsp;`\n    return str.replace(/\\t/g, tab).replace(/\\n/g, lineFeed).replace(/\\s/g, space)\n  }\n  function escapeHtml(unsafe: string): string {\n    const text = document.createTextNode(unsafe);\n    const p = document.createElement('p');\n    p.appendChild(text);\n    const safe = p.innerHTML\n    p.remove()\n    return safe\n  }\n  function format(str: string): string {\n    let newStr = str\n    if (newStr != null) {\n      newStr = props.uiShowWhiteSpaceSymbols\n        ? replaceWhiteSpacesWithSymbols(escapeHtml(newStr))\n        : replaceWhiteSpacesWithHTML(newStr)\n      return newStr\n    } else\n      return \"\"\n  }\n  function tag(str: string, className: string): JSX.Element {\n    const retStr = format(str)\n    return (<span key={className+uniquekey++} className={className} dangerouslySetInnerHTML={{__html: retStr}}></span>)\n  }\n\n  //edge case (easter egg)\n  if (trainingString === \"\" || trainingString.split(\"\").every(v => v === \" \")) return (<p data-testid={testId}><span role=\"img\" aria-label=\"shrugging woman\">🤷</span></p>)\n\n  // trainingString = replaceSpaces(trainingString)\n  const before: (JSX.Element | string)[] = []\n  let current\n  const after = tag(trainingString.slice(cursor + 1), 'after')\n\n  // Tag mistakes, up to but not including cursor\n  let start = 0\n  for (const e of mistakeCharIndices) {\n    if (e === cursor) break\n    before.push(tag(trainingString.slice(start, e), 'correct'))\n    before.push(tag(trainingString[e], 'mistake'))\n    start = e + 1\n  }\n  before.push(tag(trainingString.slice(start, cursor), 'correct'))\n\n  // Tag cursor\n  if (mistakeCharIndices.has(cursor)) {\n    current = tag(trainingString[cursor], 'typo')\n    setTimeout(() => {\n      const typo = document.getElementsByClassName('typo')\n      if (typo[0] != null) typo[0].className = 'cursor'\n    }, 750)\n  } else {\n    current = tag(trainingString[cursor], 'cursor')\n  }\n\n  return (\n    <p data-testid={testId} className={props.greyed ? \"greyed\" : \"\"} style={{textAlign: \"left\"}}>\n      {before}\n      {current}\n      {after}\n    </p>\n  )\n\n}\n\nexport default FormattedText","import \"./VirtualKeyboard.css\"\nimport React, { useState } from \"react\"\nimport Keyboard, { KeyCapLabel } from \"../../core/Keyboard\"\nimport { KeyCode } from \"../../core/KeyCode\"\nimport { Form, FormCheck } from \"react-bootstrap\"\n\ninterface VKProps {\n  layout: Keyboard\n  pressed: Set<string>\n  active: KeyCode[]\n  currentKey: KeyCode\n}\n\nexport default function VirtualKeyboard(props: React.PropsWithChildren<VKProps>): JSX.Element {\n  function generateLabelHtml(keyCapLabel: KeyCapLabel): JSX.Element {\n    let label: JSX.Element\n    switch (Object.keys(keyCapLabel).length) {\n      case 1:\n        label = <p>{keyCapLabel.main}</p>\n        break\n      case 2:\n        label = (\n          <p>\n            {keyCapLabel.shift}\n            <br />\n            {keyCapLabel.main}\n          </p>\n        )\n        break\n      case 3:\n        label = (\n          <p>\n            {keyCapLabel.shift}\n            <br />\n            {keyCapLabel.main} {keyCapLabel.opt}\n          </p>\n        )\n        break\n      default:\n        label = <p></p>\n        break\n    }\n    return label\n  }\n  let [visible, setVisible] = useState(true)\n  return (\n    <div className={\"keyboard\"} id=\"keyboard\" data-testid=\"keyboard\">\n      <Form inline style={{marginLeft: '1rem'}}>\n        <FormCheck\n          type=\"switch\"\n          id=\"kb-switch\"\n          role=\"switch\"\n          onChange={() => setVisible(!visible)}\n          checked={visible}\n          style={{marginRight: '1rem'}}\n        />\n        {props.children}\n      </Form>\n      {!visible ||\n        props.layout.layout.map((row, rowIdx) => (\n          <ul key={\"row-\" + rowIdx} className={\"keyboard-flex-row row-\" + rowIdx}>\n            {row.map(keyBtn => {\n              // Determine style classes to apply to each btn\n              const classes: string[] = [\"key-btn\"]\n\n              classes.push(\"row-item-\" + rowIdx)\n              // Pressed keys\n              const keyIsPressed = props.pressed.size && props.pressed.has(keyBtn.code)\n              if (keyIsPressed) classes.push(\"pressed\")\n              // Active/inactive\n              const keyIsActive = props.active.includes(keyBtn.code)\n              if (!keyIsActive) classes.push(\"greyed\")\n              // Current\n              const keyIsCurrent = props.currentKey === keyBtn.code\n              if (keyIsCurrent) classes.push(\"highlight\")\n\n              // Generate label html\n              const labelHtml: JSX.Element = generateLabelHtml(keyBtn.label)\n\n              return (\n                <li id={keyBtn.code} data-testid={keyBtn.code} key={keyBtn.code} className={classes.join(\" \")}>\n                  {labelHtml}\n                </li>\n              )\n            })}\n          </ul>\n        ))}\n    </div>\n  )\n\n  /* \n    let row: JSX.Element[] = []\n    keyRow.forEach(keyBtnData => {\n      let label: {\n        __html: string\n      }\n      if (keyBtnData.label) {\n        label = { __html: keyBtnData.label }\n      } else {\n        label = { __html: keyBtnData.key }\n      }\n      let classes = [\"key-btn\"]\n      classes.push(\"row-item-\" + idx)\n      if (pressed.size && pressed.has(keyBtnData.code))\n        classes.push(\"pressed\")\n      if (!keyBtnData.finger || props.keyZones.every(keyZone => keyZone as string !== keyBtnData.finger))\n        classes.push(\"greyed\")\n      // if (keyBtnData.class) classes.push(...keyBtnData.class)\n      row.push(\n        <li\n          id={keyBtnData.code}\n          key={keyBtnData.code}\n          className={classes.join(\" \")}\n          dangerouslySetInnerHTML={label}\n        ></li>\n      )\n    })\n    keys.push(\n      <ul key={\"row-\" + idx} className={\"keyboard-flex-row row-\" + idx}>\n        {row}\n      </ul>\n    )\n  }\n  return (\n    <div className={\"keyboard\"} id=\"keyboard\" data-testid=\"keyboard\">\n      {keys}\n    </div>\n    ) \n    */\n}\n","import React from \"react\"\nimport { Button } from \"react-bootstrap\"\nimport Modal from \"react-bootstrap/Modal\"\nimport { TrainingMode } from \"../../defaultState\"\n\nexport default function ModeSelectorModal(props: {\n  onHide: () => void\n  show: boolean\n  settrainingmode: (mode: TrainingMode) => void\n}): JSX.Element {\n  return (\n    <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Pick a training mode</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Button\n          block={true}\n          onClick={() => {\n            props.settrainingmode(TrainingMode.GUIDED)\n            props.onHide()\n          }}\n        >\n          <strong>Guided:</strong> choose this if you are learning to touch type\n        </Button>\n        <br />\n        <Button block={true} onClick={() => {props.settrainingmode(TrainingMode.PRACTICE); props.onHide()}}>\n          <strong>Practice:</strong> hone your skills\n        </Button>\n        <br />\n        <Button block={true} onClick={() => {props.settrainingmode(TrainingMode.CODE); props.onHide()}}>\n          <strong>Code:</strong> for programmers\n        </Button>\n        <br />\n      </Modal.Body>\n    </Modal>\n  )\n}\n","export const setNestedProp = (obj: {[key: string]: any} = {}, [first, ...rest]: string[] , value: any): any => {\n    console.log()\n    return ({ ...obj, [first]: rest.length ? setNestedProp(obj[first], rest, value) : value })\n  }","import React, { useState } from \"react\"\nimport { Button, Modal } from \"react-bootstrap\"\nimport { Course } from \"../../../assets/courses/Courses\"\nimport { Language } from \"../../../core/Language\"\nimport TrainingText from \"../../../core/TrainingText\"\nimport { sanitizeCode } from \"../../../utils/text-utils\"\nimport { setNestedProp } from \"../../../utils/utils\"\nimport { TrainingMode } from \"../../defaultState\"\n\ninterface MyProps {\n  onHide: () => void\n  show: boolean\n  mode: TrainingMode\n  language: Language\n  guidedCourse: Course\n  guidedLevelIndex: number | undefined\n  guidedWordLength: { min: number; max: number }\n  guidedNumWords: number\n  guidedHasCaps: boolean\n  guidedHasPunctuation: boolean\n  guidedHasNumbers: boolean\n  guidedHasSpecials: boolean\n  guidedLikelihoodModified: number\n\n  practiceSourceText: string\n\n  codeSourceText: string\n  codeLines: number\n  onSubmitChanges: (updatedOptions: any) => void\n}\n\nconst SettingsModal: React.FC<MyProps> = (props: MyProps) => {\n  let [draftSettings, setDraftSettings] = useState({\n    guidedCourse: props.guidedCourse,\n    guidedLevelIndex: props.guidedLevelIndex,\n    guidedWordLength: props.guidedWordLength,\n    guidedNumWords: props.guidedNumWords,\n    guidedHasCaps: props.guidedHasCaps,\n    guidedHasPunctuation: props.guidedHasPunctuation,\n    guidedHasNumbers: props.guidedHasNumbers,\n    guidedHasSpecials: props.guidedHasSpecials,\n    guidedLikelihoodModified: props.guidedLikelihoodModified,\n    practiceSourceText: props.practiceSourceText,\n    codeSourceText: props.codeSourceText,\n    codeLines: props.codeLines,\n  })\n\n  const sanitizedText = (raw: string): string => {\n    return new TrainingText(raw, props.language).text\n  }\n\n  const handleChange = (propPath: string, value: any) => {\n    const newSettings = setNestedProp(draftSettings, propPath.split(\".\"), value)\n    setDraftSettings((prev: any) => ({ ...prev, ...newSettings }))\n  }\n\n  const handleSubmit = (settings: any) => {\n    props.onSubmitChanges(settings)\n  }\n\n  let form: JSX.Element = <></> // = options.parseForm(handleChange)\n\n  switch (props.mode) {\n    case TrainingMode.GUIDED:\n      form = (\n        <form>\n          <div>Word length:</div>\n          <div>\n            <input\n              id=\"minlength\"\n              type=\"number\"\n              value={draftSettings.guidedWordLength.min}\n              onChange={e => handleChange(\"guidedWordLength.min\", e.target.value)}\n            />\n            <label htmlFor=\"minlength\">min</label>\n          </div>\n          <div>\n            <input\n              id=\"maxlength\"\n              type=\"number\"\n              value={draftSettings.guidedWordLength.max}\n              onChange={e => handleChange(\"guidedWordLength.max\", e.target.value)}\n            />\n            <label htmlFor=\"maxlength\">max</label>\n          </div>\n          <div>\n            <div>\n              <label htmlFor=\"numwords\">Words:</label>\n            </div>\n            <div>\n              <input\n                id=\"numwords\"\n                type=\"number\"\n                value={draftSettings.guidedNumWords}\n                onChange={e => handleChange(\"guidedNumWords\", e.target.value)}\n              />\n            </div>\n          </div>\n          <hr />\n          <div>Modifiers:</div>\n          <div>\n            <input\n              id=\"chkbx-caps\"\n              type=\"checkbox\"\n              checked={draftSettings.guidedHasCaps}\n              onChange={e => setDraftSettings({ ...draftSettings, guidedHasCaps: !draftSettings.guidedHasCaps })}\n            />\n            <label htmlFor=\"chkbx-caps\">aA</label>\n          </div>\n          <div>\n            <input\n              id=\"chkbx-punct\"\n              type=\"checkbox\"\n              checked={draftSettings.guidedHasPunctuation}\n              onChange={e =>\n                setDraftSettings({ ...draftSettings, guidedHasPunctuation: !draftSettings.guidedHasPunctuation })\n              }\n            />\n            <label htmlFor=\"chkbx-punct\">!?</label>\n          </div>\n          <div>\n            <input\n              id=\"chkbx-nums\"\n              type=\"checkbox\"\n              checked={draftSettings.guidedHasNumbers}\n              onChange={e => setDraftSettings({ ...draftSettings, guidedHasNumbers: !draftSettings.guidedHasNumbers })}\n            />\n            <label htmlFor=\"chkbx-nums\">0-9</label>\n          </div>\n          <div>\n            <input\n              id=\"chkbx-spec\"\n              type=\"checkbox\"\n              checked={draftSettings.guidedHasSpecials}\n              onChange={e =>\n                setDraftSettings({ ...draftSettings, guidedHasSpecials: !draftSettings.guidedHasSpecials })\n              }\n            />\n            <label htmlFor=\"chkbx-spec\">$</label>\n          </div>\n        </form>\n      )\n      break\n    case TrainingMode.PRACTICE:\n      form = (\n        <form>\n          <label htmlFor=\"userTextInput\">Source Text:</label>\n          <textarea\n            id=\"userTextInput\"\n            name=\"sourceText\"\n            style={{ width: \"100%\", height: \"400px\" }}\n            onChange={e => handleChange(\"practiceSourceText\", sanitizedText(e.target.value))}\n            value={draftSettings.practiceSourceText}\n          />\n        </form>\n      )\n      break\n    case TrainingMode.CODE:\n      form = (\n        <form>\n          <label htmlFor=\"userTextInput\">Source Text:</label>\n          <textarea\n            id=\"userTextInput\"\n            name=\"sourceText\"\n            style={{ width: \"100%\", height: \"400px\" }}\n            value={draftSettings.codeSourceText}\n            onChange={e => handleChange(\"codeSourceText\", sanitizeCode(e.target.value))}\n          />\n        </form>\n      )\n  }\n\n  return (\n    <Modal show={props.show} onHide={props.onHide} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">Settings</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{form}</Modal.Body>\n      <Modal.Footer>\n        <Button\n          onClick={() => {\n            handleSubmit(draftSettings)\n            props.onHide()\n          }}\n        >\n          Done\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react';\nimport './TextDisplay.css'\n\ntype MyProps = {\n  style: React.CSSProperties\n}\n\nexport default function TextDisplay(props: React.PropsWithChildren<MyProps>): JSX.Element {\n  return (\n    <div className=\"textDisplay\" style={props.style} role=\"textbox\">\n      {props.children}\n    </div>\n  )\n}\n// {/* <textarea autoFocus readOnly value={props.displayText}></textarea> */}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { InlineIcon } from '@iconify/react';\nimport bxFontSize from '@iconify/icons-bx/bx-font-size';\n\nexport default function FontSizeToggle(props: { toggleFn: any }) {\n  return (\n    <Button onClick={props.toggleFn}>\n      <InlineIcon height=\"1rem\" icon={bxFontSize} />\n    </Button >)\n}","import React from \"react\"\nimport styled from \"styled-components\"\nimport { TrainingMode } from \"../defaultState\"\n\nconst Wrapper = styled.div`\n  display: flex;\n`\nconst BigStat = styled.h1`\n  color: ${props => props.color};\n  height: 100%;\n  line-height: 100%;\n  margin-right: 0.5rem;\n  padding: 0;\n`\n// const WPM = styled.h1`color: var(--mistake)`\nconst SmallStack = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: end;\n  text-align: right;\n  margin: 0;\n  margin-right: 0.5rem;\n  padding: 0;\n`\nconst SmallStackLabel = styled.p`\n  margin: 0;\n`\nconst Avg = styled.small`\n  color: var(--text-secondary);\n`\n\ninterface MyProps {\n  mode: TrainingMode\n  wordsPerMinute: number\n  wordsPerMinuteAverage: number\n  successRate: number\n  successRateAverage: number\n  guidedLevelIndex: number\n  levelDescription: string\n}\n\nconst QuickStats: React.FC<MyProps> = props => {\n  return (\n    <Wrapper>\n      <BigStat className=\"display-3\" color={\"var(--correct)\"}>\n        {props.wordsPerMinute}\n      </BigStat>\n      <SmallStack>\n        <SmallStackLabel>wpm</SmallStackLabel>\n        <Avg>avg: {props.wordsPerMinuteAverage}</Avg>\n      </SmallStack>\n      <BigStat className=\"display-3\" color={\"var(--mistake)\"}>\n        {props.successRate}\n      </BigStat>\n      <SmallStack>\n        <SmallStackLabel> % correct</SmallStackLabel>\n        <Avg>avg: {props.successRateAverage}</Avg>\n      </SmallStack>\n      {props.mode !== TrainingMode.GUIDED || <BigStat className=\"display-3\" >level: {props.guidedLevelIndex}</BigStat>}\n    </Wrapper>\n  )\n}\n\nexport default QuickStats\n","import React from \"react\"\nimport './Toolbar.css'\n\nexport default function Toolbar(props: { stats: JSX.Element, buttons: JSX.Element }): JSX.Element {\n  return (\n    <nav className=\"toolbar\">\n      <div key=\"stats\" className='stats'>{props.stats}</div>\n      <div key=\"buttons\" className='settingsBtnGrp'>{props.buttons}</div>\n    </nav>\n  )\n}\n","import React from \"react\"\nimport { CourseLevel } from \"../assets/courses/Courses\"\nimport { Hand, Finger } from \"../core/Keyboard\"\nimport { KeyCode } from \"../core/KeyCode\"\nimport {\n  GuidedModeStringGenerator,\n  PracticeModeStringGenerator,\n  CodeModeStringGenerator,\n  TrainingStringGenerator,\n} from \"../core/TrainingStringGenerator/TrainingStringGenerator\"\nimport { Timer } from \"../utils/Timer\"\nimport { ThemeContext, themes } from \"./Contexts/ThemeContext/ThemeContext\"\nimport defaultState, { inactivityDelay, TrainingMode, FontSizes, MachineState, State } from \"./defaultState\"\n\n// CHILDREN\nimport { Container, Button, ButtonGroup } from \"react-bootstrap\"\nimport FormattedText from \"./FormattedText/FormattedText\"\nimport VirtualKeyboard from \"./VirtualKeyboard/VirtualKeyboard\"\nimport ModeSelectorModal from \"./Modals/ModeSelectorModal/ModeSelectorModal\"\nimport SettingsModal from \"./Modals/SettingsModal/SettingsModal\"\nimport TextDisplay from \"./TextDisplay/TextDisplay\"\nimport FontSizeToggle from \"./Toolbar/FontSizeToggle\"\nimport QuickStats from \"./Toolbar/QuickStats\"\nimport Toolbar from \"./Toolbar/Toolbar\"\nimport Keyboard from \"../core/Keyboard\"\n\nexport class TypeTrainer extends React.Component<{}, State> {\n  static contextType = ThemeContext\n  sessionTimer = Timer()\n  inactivityTimer = 0\n\n  constructor(props: any) {\n    super(props)\n    this.state = defaultState\n    this.routeEvent = this.routeEvent.bind(this)\n  }\n\n  componentDidMount(): void {\n    document.addEventListener(\"keydown\", this.routeEvent)\n    document.addEventListener(\"keyup\", this.routeEvent)\n    document.addEventListener(\"blur\", this.routeEvent)\n    this.prepareNewSession()\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener(\"keydown\", this.routeEvent)\n    document.removeEventListener(\"keyup\", this.routeEvent)\n    document.removeEventListener(\"blur\", this.routeEvent)\n  }\n\n  routeEvent(event: Event): void {\n    const machineState = this.state.machineState\n    switch (event.type) {\n      case \"keydown\":\n        switch (machineState) {\n          case \"TRAINING\":\n          case \"READY\":\n            this.handleKeyDown(event as KeyboardEvent)\n            this.resetInactivityTimer()\n            break\n          case \"PAUSED\":\n            this.unPauseSession(event)\n            break\n          case \"SETTINGS\":\n          default:\n            break\n        }\n        break\n      case \"keyup\":\n        this.handleKeyUp(event as KeyboardEvent)\n        break\n      case \"blur\":\n        this.pauseSession()\n        break\n      default:\n        break\n    }\n  }\n\n  startInactivityTimer(): number {\n    return setTimeout(() => this.routeEvent(new Event(\"blur\")), inactivityDelay)\n  }\n\n  private resetInactivityTimer(): void {\n    clearTimeout(this.inactivityTimer)\n    this.inactivityTimer = this.startInactivityTimer()\n  }\n\n  handleKeyDown(event: KeyboardEvent): void {\n    event.preventDefault()\n    const state = { ...this.state }\n    // Reject input\n    if (!TypeTrainer.shouldKeepKeyDownEvent(event, state)) {\n      return\n    }\n    state.currentUserPressedKeys.add(event.code)\n    // console.log(\"code: \", event.code, \"key: \", event.key)\n    // Validate\n    if (Keyboard.keyCodeisCharKey(event.code)) {\n      if (TypeTrainer.isCorrectCharPressed(state, event)) {\n        TypeTrainer.goToNextChar(state)\n        if (TypeTrainer.isEOF(state)) {\n          this.endSession()\n          return\n        }\n      } else {\n        state.mistakeCharIndices.add(state.cursor)\n      }\n    }\n\n    // Update state\n    this.setState(state, () => {\n      if (this.state.machineState === \"READY\") {\n        this.startSession()\n      }\n    })\n  }\n\n  setModeModalShow(value: boolean): void {\n    this.setState({ uiModeSelectShow: value }, () => {\n      if (value) this.pauseSession(\"SETTINGS\")\n    })\n  }\n\n  setSettingsModalShow(value: boolean): void {\n    this.setState({ uiSettingsModalShow: value }, () => {\n      if (value) this.pauseSession(\"SETTINGS\")\n    })\n  }\n\n  setTrainingMode(mode: TrainingMode = this.state.trainingMode): void {\n    this.prepareNewSession({ trainingMode: mode, machineState: 'INIT' })\n  }\n\n  private static isEOF(state: State): boolean {\n    return state.cursor === state.trainingString.length\n  }\n\n  private static goToNextChar(state: State): void {\n    state.cursor += 1\n  }\n\n  private static isCorrectCharPressed(state: State, event: KeyboardEvent): boolean {\n    if (event.key === \"Enter\") return state.trainingString[state.cursor] === \"\\n\"\n    if (event.key === \"Tab\") return state.trainingString[state.cursor] === \"\\t\"\n\n    return state.trainingString[state.cursor] === event.key\n  }\n\n  private static shouldKeepKeyDownEvent(event: KeyboardEvent, state: State): boolean {\n    return !event.repeat && !state.currentUserPressedKeys.has(event.code)\n  }\n\n  handleKeyUp(event: KeyboardEvent): void {\n    event.preventDefault()\n    const pressed = this.state.currentUserPressedKeys\n    pressed.delete(event.code)\n    this.setState({ currentUserPressedKeys: pressed })\n  }\n\n  logStatus(): void {\n    console.info(\"Status: \" + this.state.machineState)\n  }\n\n  startSession(): void {\n    this.sessionTimer.start()\n    this.setState({ machineState: \"TRAINING\" }, () => this.logStatus())\n  }\n\n  pauseSession(state: MachineState = \"PAUSED\"): void {\n    if (this.sessionTimer != null) this.sessionTimer.pause()\n    this.setState({ currentUserPressedKeys: new Set(), machineState: state }, () => this.logStatus())\n  }\n\n  unPauseSession(event: Event): void {\n    this.sessionTimer.unPause()\n    this.setState({ machineState: \"TRAINING\" }, () => {\n      this.logStatus()\n      this.routeEvent(event)\n    })\n  }\n\n  prepareNewSession(newState: any = {}): void {\n    const draftState = { ...this.state, ...newState }\n    console.table(draftState)\n    if (draftState.machineState === \"INIT\" || draftState.machineState === 'SETTINGS') {\n      draftState.trainingStringGenerator = this.newStringGenerator(draftState)\n      draftState.trainingString = draftState.trainingStringGenerator.generate(draftState)\n    } else {\n      draftState.trainingString = this.state.trainingStringGenerator.generate(draftState)\n    }\n\n    draftState.cursor = 0\n    draftState.mistakeCharIndices = new Set()\n\n    this.setState(\n      state => ({ ...state, ...draftState, machineState: \"READY\" }),\n      () => this.logStatus()\n    )\n  }\n\n  endSession(): void {\n    const totalSessions = this.state.totalSessions + 1\n\n    const wordsPerMinute = this.wordsPerMinute()\n    const wordsPerMinuteAverage = Math.round(\n      (this.state.wordsPerMinuteAverage * this.state.totalSessions + wordsPerMinute) / totalSessions\n    )\n\n    const successRate = Math.round(100 * (1 - this.state.mistakeCharIndices.size / this.state.trainingString.length))\n    const successRateAverage = Math.round(\n      (this.state.successRate * this.state.totalSessions + successRate) / totalSessions\n    )\n\n    const guidedLevelIndex = this.nextLevelIndex(successRate)\n\n    this.setState({ totalSessions, wordsPerMinute, wordsPerMinuteAverage, successRate, successRateAverage, guidedLevelIndex }, () =>\n      this.prepareNewSession()\n    )\n  }\n\n  nextLevelIndex(successRate: number) {\n    const currentLvl = this.state.guidedLevelIndex\n    if (successRate >= 97 && currentLvl < this.state.guidedCourse.levels.length - 1) {\n      return currentLvl + 1\n    } else if (successRate <= 50 && currentLvl > 0) {\n      return currentLvl - 1\n    } else {\n      return currentLvl\n    }\n  }\n\n  private wordsPerMinute(): number {\n    const minutes = this.sessionTimer.getTimeElapsed() / 1000 / 60\n    const conventionalWordLength = 5\n    const sentenceLength = this.state.trainingString.length\n    const words = sentenceLength / conventionalWordLength\n    if (words < 1 && minutes < 1 / 60) return 40 // sloppy patch to avoid ridiculous values\n    const wpm = Math.round(words / minutes)\n    return wpm\n  }\n\n  private newStringGenerator(state: any): TrainingStringGenerator {\n    const mode = state.trainingMode || this.state.trainingMode\n    let generator: TrainingStringGenerator\n    switch (mode) {\n      case TrainingMode.GUIDED:\n        generator = new GuidedModeStringGenerator(\n          this.state.keyboard,\n          this.state.language,\n          this.state.guidedCourse.levels\n        )\n        break\n      case TrainingMode.PRACTICE:\n        generator = new PracticeModeStringGenerator(\n          this.state.language,\n          state.practiceSourceText || this.state.practiceSourceText\n        )\n        break\n      case TrainingMode.CODE:\n        generator = new CodeModeStringGenerator(state.codeSourceText || this.state.codeSourceText)\n        break\n      default:\n        generator = this.state.trainingStringGenerator\n        break\n    }\n    return generator\n  }\n\n  private getCurrentLevel(): CourseLevel {\n    // return final level (full keyboard) if lvl is undefined\n    return this.state.guidedCourse.levels[this.state.guidedLevelIndex]\n  }\n\n  toggleTheme(): void {\n    this.setState({ uiTheme: this.state.uiTheme === themes.light ? themes.dark : themes.light })\n  }\n\n  toggleFontSize(): void {\n    this.setState({ trainingStringFontSize: (this.state.trainingStringFontSize + 1) % 3 }) // TODO: remove magic number\n  }\n\n  toggleWhiteSpaceSymbols(): void {\n    this.setState({ uiShowWhiteSpaceSymbols: !this.state.uiShowWhiteSpaceSymbols })\n  }\n\n  currentActiveKeyCodes(): KeyCode[] {\n    const globalUsedKeyCodes = this.state.language.uniqueKeyCodes\n    if (this.state.trainingMode === TrainingMode.GUIDED) {\n      const keyboard = this.state.keyboard\n      const { keyBoardRows: rows, hand, fingers } = this.getCurrentLevel()\n      let active: KeyCode[] = []\n      const activeRows = rows.map(row => keyboard.layout[row])\n      activeRows.forEach(row => {\n        active = active.concat(\n          row\n            .filter(keyCap => {\n              const belongsToHand = hand === Hand.ANY || hand === keyCap.fingerHand.hand\n              const belongsToFingers = fingers[0] === Finger.ANY || fingers.includes(keyCap.fingerHand.finger)\n              const belongsToGlobalUsed = globalUsedKeyCodes.includes(keyCap.code)\n              return belongsToHand && belongsToFingers && belongsToGlobalUsed\n            })\n            .map(keyCap => keyCap.code)\n        )\n      })\n      return active\n    } else {\n      return globalUsedKeyCodes\n    }\n  }\n\n  applyUserSettings(settings: any) {\n    this.prepareNewSession({ ...settings })\n  }\n\n  render(): JSX.Element {\n    return (\n      <ThemeContext.Provider value={{ theme: this.state.uiTheme, toggleTheme: (): void => this.toggleTheme() }}>\n        <ModeSelectorModal\n          show={this.state.uiModeSelectShow}\n          onHide={() => this.setModeModalShow(false)}\n          settrainingmode={(mode: TrainingMode): void => this.setTrainingMode(mode)}\n        ></ModeSelectorModal>\n        <SettingsModal\n          show={this.state.uiSettingsModalShow}\n          onHide={() => this.setSettingsModalShow(false)}\n          mode={this.state.trainingMode}\n          language={this.state.language}\n          guidedCourse={this.state.guidedCourse}\n          guidedLevelIndex={this.state.guidedLevelIndex}\n          guidedWordLength={this.state.guidedWordLength}\n          guidedNumWords={this.state.guidedNumWords}\n          guidedHasCaps={this.state.guidedHasCaps}\n          guidedHasPunctuation={this.state.guidedHasPunctuation}\n          guidedHasNumbers={this.state.guidedHasNumbers}\n          guidedHasSpecials={this.state.guidedHasSpecials}\n          guidedLikelihoodModified={this.state.guidedLikelihoodModified}\n          practiceSourceText={this.state.practiceSourceText}\n          codeSourceText={this.state.codeSourceText}\n          codeLines={this.state.codeLines}\n          onSubmitChanges={settings => this.applyUserSettings(settings)}\n        ></SettingsModal>\n        <Container fluid className=\"App\" style={this.state.uiTheme}>\n          <Toolbar\n            stats={<QuickStats key=\"quickStats\" {...this.state} mode={this.state.trainingMode} levelDescription={this.getCurrentLevel().description} />}\n            buttons={\n              <ButtonGroup aria-label=\"App settings\">\n                <Button key=\"openModeSelectModalBtn\" onClick={() => this.setModeModalShow(true)}>\n                  {this.state.trainingMode}\n                </Button>\n                <Button key=\"openSettingsModalBtn\" onClick={() => this.setSettingsModalShow(true)}>\n                  Settings\n                </Button>\n                <FontSizeToggle key={\"fontSelect\"} toggleFn={(): void => this.toggleFontSize()} />\n                <Button\n                  key=\"uiShowWhiteSpaceSymbols\"\n                  onClick={() => this.toggleWhiteSpaceSymbols()}\n                  dangerouslySetInnerHTML={\n                    this.state.uiShowWhiteSpaceSymbols ? { __html: \"<strike>&para;</strike>\" } : { __html: \"&para;\" }\n                  }\n                ></Button>\n                <Button key=\"toggleTheme\" onClick={() => this.toggleTheme()}>\n                  {this.state.uiTheme === themes.dark ? \"🌞\" : \"🌛\"}\n                </Button>\n              </ButtonGroup>\n            }\n          />\n          <Container>\n            <TextDisplay style={{ fontSize: FontSizes[this.state.trainingStringFontSize] }}>\n              <FormattedText\n                greyed={this.state.machineState === \"PAUSED\"}\n                mode={this.state.trainingMode}\n                cursor={this.state.cursor}\n                trainingString={this.state.trainingString}\n                mistakeCharIndices={this.state.mistakeCharIndices}\n                uiShowWhiteSpaceSymbols={this.state.uiShowWhiteSpaceSymbols}\n              />\n            </TextDisplay>\n\n            <VirtualKeyboard\n              layout={this.state.keyboard}\n              pressed={this.state.currentUserPressedKeys}\n              active={this.currentActiveKeyCodes()}\n              currentKey={this.state.language.characterSet.mapGlyphToKeyCode(\n                this.state.trainingString[this.state.cursor]\n              )}\n            ></VirtualKeyboard>\n          </Container>\n        </Container>\n      </ThemeContext.Provider>\n    )\n  }\n}\n","\nexport function Timer() {\n  let paused: boolean;\n  let startMark: number = Date.now();\n  let pauseMark: number;\n  let pausedLength: number = 0;\n  return {\n    start: () => {\n      startMark = Date.now();\n      paused = false;\n      pauseMark = 0;\n      pausedLength = 0;\n    },\n    pause: () => {\n      if (!paused) {\n        paused = true;\n        pauseMark = Date.now();\n      }\n    },\n    unPause: () => {\n      if (paused) {\n        paused = false;\n        pausedLength += Date.now() - pauseMark;\n      }\n    },\n    getTimeElapsed: () => {\n      let total = Date.now() - (startMark + pausedLength);\n      return total;\n    },\n  };\n}\n","import React from \"react\"\nimport \"./App.css\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { TypeTrainer } from \"./components/TypeTrainer\"\n\nfunction App(): JSX.Element {\n  return <TypeTrainer />\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}